

Terminals which are not used:

   tUNIMPL_KEYWORD
   tNEG


Conflict in state 62 between rule 46 and token tCONDTEST resolved as reduce.
Conflict in state 62 between rule 46 and token tLOR resolved as reduce.
Conflict in state 62 between rule 46 and token tLAND resolved as reduce.
Conflict in state 62 between rule 46 and token tOR resolved as reduce.
Conflict in state 62 between rule 46 and token tXOR resolved as reduce.
Conflict in state 62 between rule 46 and token tAND resolved as reduce.
Conflict in state 62 between rule 46 and token tEQ resolved as reduce.
Conflict in state 62 between rule 46 and token tNE resolved as reduce.
Conflict in state 62 between rule 46 and token tLT resolved as reduce.
Conflict in state 62 between rule 46 and token tLE resolved as reduce.
Conflict in state 62 between rule 46 and token tGE resolved as reduce.
Conflict in state 62 between rule 46 and token tGT resolved as reduce.
Conflict in state 62 between rule 46 and token tRSHIFT resolved as reduce.
Conflict in state 62 between rule 46 and token tLSHIFT resolved as reduce.
Conflict in state 62 between rule 46 and token tRSHIFTFILL resolved as reduce.
Conflict in state 62 between rule 46 and token tPLUS resolved as reduce.
Conflict in state 62 between rule 46 and token tMINUS resolved as reduce.
Conflict in state 62 between rule 46 and token tMULTIPLY resolved as reduce.
Conflict in state 62 between rule 46 and token tDIVIDE resolved as reduce.
Conflict in state 62 between rule 46 and token tMOD resolved as reduce.
Conflict in state 62 between rule 46 and token tINCREMENT resolved as shift.
Conflict in state 62 between rule 46 and token tDECREMENT resolved as shift.
Conflict in state 62 between rule 46 and token tDOT resolved as shift.
Conflict in state 62 between rule 46 and token tRIGHTBRACKET resolved as shift.
Conflict in state 63 between rule 47 and token tCONDTEST resolved as reduce.
Conflict in state 63 between rule 47 and token tLOR resolved as reduce.
Conflict in state 63 between rule 47 and token tLAND resolved as reduce.
Conflict in state 63 between rule 47 and token tOR resolved as reduce.
Conflict in state 63 between rule 47 and token tXOR resolved as reduce.
Conflict in state 63 between rule 47 and token tAND resolved as reduce.
Conflict in state 63 between rule 47 and token tEQ resolved as reduce.
Conflict in state 63 between rule 47 and token tNE resolved as reduce.
Conflict in state 63 between rule 47 and token tLT resolved as reduce.
Conflict in state 63 between rule 47 and token tLE resolved as reduce.
Conflict in state 63 between rule 47 and token tGE resolved as reduce.
Conflict in state 63 between rule 47 and token tGT resolved as reduce.
Conflict in state 63 between rule 47 and token tRSHIFT resolved as reduce.
Conflict in state 63 between rule 47 and token tLSHIFT resolved as reduce.
Conflict in state 63 between rule 47 and token tRSHIFTFILL resolved as reduce.
Conflict in state 63 between rule 47 and token tPLUS resolved as reduce.
Conflict in state 63 between rule 47 and token tMINUS resolved as reduce.
Conflict in state 63 between rule 47 and token tMULTIPLY resolved as reduce.
Conflict in state 63 between rule 47 and token tDIVIDE resolved as reduce.
Conflict in state 63 between rule 47 and token tMOD resolved as reduce.
Conflict in state 63 between rule 47 and token tINCREMENT resolved as shift.
Conflict in state 63 between rule 47 and token tDECREMENT resolved as shift.
Conflict in state 63 between rule 47 and token tDOT resolved as shift.
Conflict in state 63 between rule 47 and token tRIGHTBRACKET resolved as shift.
Conflict in state 64 between rule 48 and token tCONDTEST resolved as reduce.
Conflict in state 64 between rule 48 and token tLOR resolved as reduce.
Conflict in state 64 between rule 48 and token tLAND resolved as reduce.
Conflict in state 64 between rule 48 and token tOR resolved as reduce.
Conflict in state 64 between rule 48 and token tXOR resolved as reduce.
Conflict in state 64 between rule 48 and token tAND resolved as reduce.
Conflict in state 64 between rule 48 and token tEQ resolved as reduce.
Conflict in state 64 between rule 48 and token tNE resolved as reduce.
Conflict in state 64 between rule 48 and token tLT resolved as reduce.
Conflict in state 64 between rule 48 and token tLE resolved as reduce.
Conflict in state 64 between rule 48 and token tGE resolved as reduce.
Conflict in state 64 between rule 48 and token tGT resolved as reduce.
Conflict in state 64 between rule 48 and token tRSHIFT resolved as reduce.
Conflict in state 64 between rule 48 and token tLSHIFT resolved as reduce.
Conflict in state 64 between rule 48 and token tRSHIFTFILL resolved as reduce.
Conflict in state 64 between rule 48 and token tPLUS resolved as reduce.
Conflict in state 64 between rule 48 and token tMINUS resolved as reduce.
Conflict in state 64 between rule 48 and token tMULTIPLY resolved as reduce.
Conflict in state 64 between rule 48 and token tDIVIDE resolved as reduce.
Conflict in state 64 between rule 48 and token tMOD resolved as reduce.
Conflict in state 64 between rule 48 and token tINCREMENT resolved as shift.
Conflict in state 64 between rule 48 and token tDECREMENT resolved as shift.
Conflict in state 64 between rule 48 and token tDOT resolved as shift.
Conflict in state 64 between rule 48 and token tRIGHTBRACKET resolved as shift.
Conflict in state 65 between rule 61 and token tCONDTEST resolved as reduce.
Conflict in state 65 between rule 61 and token tLOR resolved as reduce.
Conflict in state 65 between rule 61 and token tLAND resolved as reduce.
Conflict in state 65 between rule 61 and token tOR resolved as reduce.
Conflict in state 65 between rule 61 and token tXOR resolved as reduce.
Conflict in state 65 between rule 61 and token tAND resolved as reduce.
Conflict in state 65 between rule 61 and token tEQ resolved as reduce.
Conflict in state 65 between rule 61 and token tNE resolved as reduce.
Conflict in state 65 between rule 61 and token tLT resolved as reduce.
Conflict in state 65 between rule 61 and token tLE resolved as reduce.
Conflict in state 65 between rule 61 and token tGE resolved as reduce.
Conflict in state 65 between rule 61 and token tGT resolved as reduce.
Conflict in state 65 between rule 61 and token tRSHIFT resolved as reduce.
Conflict in state 65 between rule 61 and token tLSHIFT resolved as reduce.
Conflict in state 65 between rule 61 and token tRSHIFTFILL resolved as reduce.
Conflict in state 65 between rule 61 and token tPLUS resolved as reduce.
Conflict in state 65 between rule 61 and token tMINUS resolved as reduce.
Conflict in state 65 between rule 61 and token tMULTIPLY resolved as reduce.
Conflict in state 65 between rule 61 and token tDIVIDE resolved as reduce.
Conflict in state 65 between rule 61 and token tMOD resolved as reduce.
Conflict in state 65 between rule 61 and token tINCREMENT resolved as shift.
Conflict in state 65 between rule 61 and token tDECREMENT resolved as shift.
Conflict in state 65 between rule 61 and token tDOT resolved as shift.
Conflict in state 65 between rule 61 and token tRIGHTBRACKET resolved as shift.
Conflict in state 66 between rule 62 and token tCONDTEST resolved as reduce.
Conflict in state 66 between rule 62 and token tLOR resolved as reduce.
Conflict in state 66 between rule 62 and token tLAND resolved as reduce.
Conflict in state 66 between rule 62 and token tOR resolved as reduce.
Conflict in state 66 between rule 62 and token tXOR resolved as reduce.
Conflict in state 66 between rule 62 and token tAND resolved as reduce.
Conflict in state 66 between rule 62 and token tEQ resolved as reduce.
Conflict in state 66 between rule 62 and token tNE resolved as reduce.
Conflict in state 66 between rule 62 and token tLT resolved as reduce.
Conflict in state 66 between rule 62 and token tLE resolved as reduce.
Conflict in state 66 between rule 62 and token tGE resolved as reduce.
Conflict in state 66 between rule 62 and token tGT resolved as reduce.
Conflict in state 66 between rule 62 and token tRSHIFT resolved as reduce.
Conflict in state 66 between rule 62 and token tLSHIFT resolved as reduce.
Conflict in state 66 between rule 62 and token tRSHIFTFILL resolved as reduce.
Conflict in state 66 between rule 62 and token tPLUS resolved as reduce.
Conflict in state 66 between rule 62 and token tMINUS resolved as reduce.
Conflict in state 66 between rule 62 and token tMULTIPLY resolved as reduce.
Conflict in state 66 between rule 62 and token tDIVIDE resolved as reduce.
Conflict in state 66 between rule 62 and token tMOD resolved as reduce.
Conflict in state 66 between rule 62 and token tINCREMENT resolved as shift.
Conflict in state 66 between rule 62 and token tDECREMENT resolved as shift.
Conflict in state 66 between rule 62 and token tDOT resolved as shift.
Conflict in state 66 between rule 62 and token tRIGHTBRACKET resolved as shift.
Conflict in state 130 between rule 73 and token tCONDTEST resolved as reduce.
Conflict in state 130 between rule 73 and token tLOR resolved as reduce.
Conflict in state 130 between rule 73 and token tLAND resolved as shift.
Conflict in state 130 between rule 73 and token tOR resolved as shift.
Conflict in state 130 between rule 73 and token tXOR resolved as shift.
Conflict in state 130 between rule 73 and token tAND resolved as shift.
Conflict in state 130 between rule 73 and token tEQ resolved as shift.
Conflict in state 130 between rule 73 and token tNE resolved as shift.
Conflict in state 130 between rule 73 and token tLT resolved as shift.
Conflict in state 130 between rule 73 and token tLE resolved as shift.
Conflict in state 130 between rule 73 and token tGE resolved as shift.
Conflict in state 130 between rule 73 and token tGT resolved as shift.
Conflict in state 130 between rule 73 and token tRSHIFT resolved as shift.
Conflict in state 130 between rule 73 and token tLSHIFT resolved as shift.
Conflict in state 130 between rule 73 and token tRSHIFTFILL resolved as shift.
Conflict in state 130 between rule 73 and token tPLUS resolved as shift.
Conflict in state 130 between rule 73 and token tMINUS resolved as shift.
Conflict in state 130 between rule 73 and token tMULTIPLY resolved as shift.
Conflict in state 130 between rule 73 and token tDIVIDE resolved as shift.
Conflict in state 130 between rule 73 and token tMOD resolved as shift.
Conflict in state 130 between rule 73 and token tINCREMENT resolved as shift.
Conflict in state 130 between rule 73 and token tDECREMENT resolved as shift.
Conflict in state 130 between rule 73 and token tDOT resolved as shift.
Conflict in state 130 between rule 73 and token tRIGHTBRACKET resolved as shift.
Conflict in state 131 between rule 72 and token tCONDTEST resolved as reduce.
Conflict in state 131 between rule 72 and token tLOR resolved as reduce.
Conflict in state 131 between rule 72 and token tLAND resolved as reduce.
Conflict in state 131 between rule 72 and token tOR resolved as shift.
Conflict in state 131 between rule 72 and token tXOR resolved as shift.
Conflict in state 131 between rule 72 and token tAND resolved as shift.
Conflict in state 131 between rule 72 and token tEQ resolved as shift.
Conflict in state 131 between rule 72 and token tNE resolved as shift.
Conflict in state 131 between rule 72 and token tLT resolved as shift.
Conflict in state 131 between rule 72 and token tLE resolved as shift.
Conflict in state 131 between rule 72 and token tGE resolved as shift.
Conflict in state 131 between rule 72 and token tGT resolved as shift.
Conflict in state 131 between rule 72 and token tRSHIFT resolved as shift.
Conflict in state 131 between rule 72 and token tLSHIFT resolved as shift.
Conflict in state 131 between rule 72 and token tRSHIFTFILL resolved as shift.
Conflict in state 131 between rule 72 and token tPLUS resolved as shift.
Conflict in state 131 between rule 72 and token tMINUS resolved as shift.
Conflict in state 131 between rule 72 and token tMULTIPLY resolved as shift.
Conflict in state 131 between rule 72 and token tDIVIDE resolved as shift.
Conflict in state 131 between rule 72 and token tMOD resolved as shift.
Conflict in state 131 between rule 72 and token tINCREMENT resolved as shift.
Conflict in state 131 between rule 72 and token tDECREMENT resolved as shift.
Conflict in state 131 between rule 72 and token tDOT resolved as shift.
Conflict in state 131 between rule 72 and token tRIGHTBRACKET resolved as shift.
Conflict in state 132 between rule 80 and token tCONDTEST resolved as reduce.
Conflict in state 132 between rule 80 and token tLOR resolved as reduce.
Conflict in state 132 between rule 80 and token tLAND resolved as reduce.
Conflict in state 132 between rule 80 and token tOR resolved as reduce.
Conflict in state 132 between rule 80 and token tXOR resolved as shift.
Conflict in state 132 between rule 80 and token tAND resolved as shift.
Conflict in state 132 between rule 80 and token tEQ resolved as shift.
Conflict in state 132 between rule 80 and token tNE resolved as shift.
Conflict in state 132 between rule 80 and token tLT resolved as shift.
Conflict in state 132 between rule 80 and token tLE resolved as shift.
Conflict in state 132 between rule 80 and token tGE resolved as shift.
Conflict in state 132 between rule 80 and token tGT resolved as shift.
Conflict in state 132 between rule 80 and token tRSHIFT resolved as shift.
Conflict in state 132 between rule 80 and token tLSHIFT resolved as shift.
Conflict in state 132 between rule 80 and token tRSHIFTFILL resolved as shift.
Conflict in state 132 between rule 80 and token tPLUS resolved as shift.
Conflict in state 132 between rule 80 and token tMINUS resolved as shift.
Conflict in state 132 between rule 80 and token tMULTIPLY resolved as shift.
Conflict in state 132 between rule 80 and token tDIVIDE resolved as shift.
Conflict in state 132 between rule 80 and token tMOD resolved as shift.
Conflict in state 132 between rule 80 and token tINCREMENT resolved as shift.
Conflict in state 132 between rule 80 and token tDECREMENT resolved as shift.
Conflict in state 132 between rule 80 and token tDOT resolved as shift.
Conflict in state 132 between rule 80 and token tRIGHTBRACKET resolved as shift.
Conflict in state 133 between rule 81 and token tCONDTEST resolved as reduce.
Conflict in state 133 between rule 81 and token tLOR resolved as reduce.
Conflict in state 133 between rule 81 and token tLAND resolved as reduce.
Conflict in state 133 between rule 81 and token tOR resolved as reduce.
Conflict in state 133 between rule 81 and token tXOR resolved as reduce.
Conflict in state 133 between rule 81 and token tAND resolved as shift.
Conflict in state 133 between rule 81 and token tEQ resolved as shift.
Conflict in state 133 between rule 81 and token tNE resolved as shift.
Conflict in state 133 between rule 81 and token tLT resolved as shift.
Conflict in state 133 between rule 81 and token tLE resolved as shift.
Conflict in state 133 between rule 81 and token tGE resolved as shift.
Conflict in state 133 between rule 81 and token tGT resolved as shift.
Conflict in state 133 between rule 81 and token tRSHIFT resolved as shift.
Conflict in state 133 between rule 81 and token tLSHIFT resolved as shift.
Conflict in state 133 between rule 81 and token tRSHIFTFILL resolved as shift.
Conflict in state 133 between rule 81 and token tPLUS resolved as shift.
Conflict in state 133 between rule 81 and token tMINUS resolved as shift.
Conflict in state 133 between rule 81 and token tMULTIPLY resolved as shift.
Conflict in state 133 between rule 81 and token tDIVIDE resolved as shift.
Conflict in state 133 between rule 81 and token tMOD resolved as shift.
Conflict in state 133 between rule 81 and token tINCREMENT resolved as shift.
Conflict in state 133 between rule 81 and token tDECREMENT resolved as shift.
Conflict in state 133 between rule 81 and token tDOT resolved as shift.
Conflict in state 133 between rule 81 and token tRIGHTBRACKET resolved as shift.
Conflict in state 134 between rule 79 and token tCONDTEST resolved as reduce.
Conflict in state 134 between rule 79 and token tLOR resolved as reduce.
Conflict in state 134 between rule 79 and token tLAND resolved as reduce.
Conflict in state 134 between rule 79 and token tOR resolved as reduce.
Conflict in state 134 between rule 79 and token tXOR resolved as reduce.
Conflict in state 134 between rule 79 and token tAND resolved as reduce.
Conflict in state 134 between rule 79 and token tEQ resolved as shift.
Conflict in state 134 between rule 79 and token tNE resolved as shift.
Conflict in state 134 between rule 79 and token tLT resolved as shift.
Conflict in state 134 between rule 79 and token tLE resolved as shift.
Conflict in state 134 between rule 79 and token tGE resolved as shift.
Conflict in state 134 between rule 79 and token tGT resolved as shift.
Conflict in state 134 between rule 79 and token tRSHIFT resolved as shift.
Conflict in state 134 between rule 79 and token tLSHIFT resolved as shift.
Conflict in state 134 between rule 79 and token tRSHIFTFILL resolved as shift.
Conflict in state 134 between rule 79 and token tPLUS resolved as shift.
Conflict in state 134 between rule 79 and token tMINUS resolved as shift.
Conflict in state 134 between rule 79 and token tMULTIPLY resolved as shift.
Conflict in state 134 between rule 79 and token tDIVIDE resolved as shift.
Conflict in state 134 between rule 79 and token tMOD resolved as shift.
Conflict in state 134 between rule 79 and token tINCREMENT resolved as shift.
Conflict in state 134 between rule 79 and token tDECREMENT resolved as shift.
Conflict in state 134 between rule 79 and token tDOT resolved as shift.
Conflict in state 134 between rule 79 and token tRIGHTBRACKET resolved as shift.
Conflict in state 135 between rule 66 and token tCONDTEST resolved as reduce.
Conflict in state 135 between rule 66 and token tLOR resolved as reduce.
Conflict in state 135 between rule 66 and token tLAND resolved as reduce.
Conflict in state 135 between rule 66 and token tOR resolved as reduce.
Conflict in state 135 between rule 66 and token tXOR resolved as reduce.
Conflict in state 135 between rule 66 and token tAND resolved as reduce.
Conflict in state 135 between rule 66 and token tEQ resolved as reduce.
Conflict in state 135 between rule 66 and token tNE resolved as reduce.
Conflict in state 135 between rule 66 and token tLT resolved as shift.
Conflict in state 135 between rule 66 and token tLE resolved as shift.
Conflict in state 135 between rule 66 and token tGE resolved as shift.
Conflict in state 135 between rule 66 and token tGT resolved as shift.
Conflict in state 135 between rule 66 and token tRSHIFT resolved as shift.
Conflict in state 135 between rule 66 and token tLSHIFT resolved as shift.
Conflict in state 135 between rule 66 and token tRSHIFTFILL resolved as shift.
Conflict in state 135 between rule 66 and token tPLUS resolved as shift.
Conflict in state 135 between rule 66 and token tMINUS resolved as shift.
Conflict in state 135 between rule 66 and token tMULTIPLY resolved as shift.
Conflict in state 135 between rule 66 and token tDIVIDE resolved as shift.
Conflict in state 135 between rule 66 and token tMOD resolved as shift.
Conflict in state 135 between rule 66 and token tINCREMENT resolved as shift.
Conflict in state 135 between rule 66 and token tDECREMENT resolved as shift.
Conflict in state 135 between rule 66 and token tDOT resolved as shift.
Conflict in state 135 between rule 66 and token tRIGHTBRACKET resolved as shift.
Conflict in state 136 between rule 67 and token tCONDTEST resolved as reduce.
Conflict in state 136 between rule 67 and token tLOR resolved as reduce.
Conflict in state 136 between rule 67 and token tLAND resolved as reduce.
Conflict in state 136 between rule 67 and token tOR resolved as reduce.
Conflict in state 136 between rule 67 and token tXOR resolved as reduce.
Conflict in state 136 between rule 67 and token tAND resolved as reduce.
Conflict in state 136 between rule 67 and token tEQ resolved as reduce.
Conflict in state 136 between rule 67 and token tNE resolved as reduce.
Conflict in state 136 between rule 67 and token tLT resolved as shift.
Conflict in state 136 between rule 67 and token tLE resolved as shift.
Conflict in state 136 between rule 67 and token tGE resolved as shift.
Conflict in state 136 between rule 67 and token tGT resolved as shift.
Conflict in state 136 between rule 67 and token tRSHIFT resolved as shift.
Conflict in state 136 between rule 67 and token tLSHIFT resolved as shift.
Conflict in state 136 between rule 67 and token tRSHIFTFILL resolved as shift.
Conflict in state 136 between rule 67 and token tPLUS resolved as shift.
Conflict in state 136 between rule 67 and token tMINUS resolved as shift.
Conflict in state 136 between rule 67 and token tMULTIPLY resolved as shift.
Conflict in state 136 between rule 67 and token tDIVIDE resolved as shift.
Conflict in state 136 between rule 67 and token tMOD resolved as shift.
Conflict in state 136 between rule 67 and token tINCREMENT resolved as shift.
Conflict in state 136 between rule 67 and token tDECREMENT resolved as shift.
Conflict in state 136 between rule 67 and token tDOT resolved as shift.
Conflict in state 136 between rule 67 and token tRIGHTBRACKET resolved as shift.
Conflict in state 137 between rule 68 and token tCONDTEST resolved as reduce.
Conflict in state 137 between rule 68 and token tLOR resolved as reduce.
Conflict in state 137 between rule 68 and token tLAND resolved as reduce.
Conflict in state 137 between rule 68 and token tOR resolved as reduce.
Conflict in state 137 between rule 68 and token tXOR resolved as reduce.
Conflict in state 137 between rule 68 and token tAND resolved as reduce.
Conflict in state 137 between rule 68 and token tEQ resolved as reduce.
Conflict in state 137 between rule 68 and token tNE resolved as reduce.
Conflict in state 137 between rule 68 and token tLT resolved as reduce.
Conflict in state 137 between rule 68 and token tLE resolved as reduce.
Conflict in state 137 between rule 68 and token tGE resolved as reduce.
Conflict in state 137 between rule 68 and token tGT resolved as reduce.
Conflict in state 137 between rule 68 and token tRSHIFT resolved as shift.
Conflict in state 137 between rule 68 and token tLSHIFT resolved as shift.
Conflict in state 137 between rule 68 and token tRSHIFTFILL resolved as shift.
Conflict in state 137 between rule 68 and token tPLUS resolved as shift.
Conflict in state 137 between rule 68 and token tMINUS resolved as shift.
Conflict in state 137 between rule 68 and token tMULTIPLY resolved as shift.
Conflict in state 137 between rule 68 and token tDIVIDE resolved as shift.
Conflict in state 137 between rule 68 and token tMOD resolved as shift.
Conflict in state 137 between rule 68 and token tINCREMENT resolved as shift.
Conflict in state 137 between rule 68 and token tDECREMENT resolved as shift.
Conflict in state 137 between rule 68 and token tDOT resolved as shift.
Conflict in state 137 between rule 68 and token tRIGHTBRACKET resolved as shift.
Conflict in state 138 between rule 69 and token tCONDTEST resolved as reduce.
Conflict in state 138 between rule 69 and token tLOR resolved as reduce.
Conflict in state 138 between rule 69 and token tLAND resolved as reduce.
Conflict in state 138 between rule 69 and token tOR resolved as reduce.
Conflict in state 138 between rule 69 and token tXOR resolved as reduce.
Conflict in state 138 between rule 69 and token tAND resolved as reduce.
Conflict in state 138 between rule 69 and token tEQ resolved as reduce.
Conflict in state 138 between rule 69 and token tNE resolved as reduce.
Conflict in state 138 between rule 69 and token tLT resolved as reduce.
Conflict in state 138 between rule 69 and token tLE resolved as reduce.
Conflict in state 138 between rule 69 and token tGE resolved as reduce.
Conflict in state 138 between rule 69 and token tGT resolved as reduce.
Conflict in state 138 between rule 69 and token tRSHIFT resolved as shift.
Conflict in state 138 between rule 69 and token tLSHIFT resolved as shift.
Conflict in state 138 between rule 69 and token tRSHIFTFILL resolved as shift.
Conflict in state 138 between rule 69 and token tPLUS resolved as shift.
Conflict in state 138 between rule 69 and token tMINUS resolved as shift.
Conflict in state 138 between rule 69 and token tMULTIPLY resolved as shift.
Conflict in state 138 between rule 69 and token tDIVIDE resolved as shift.
Conflict in state 138 between rule 69 and token tMOD resolved as shift.
Conflict in state 138 between rule 69 and token tINCREMENT resolved as shift.
Conflict in state 138 between rule 69 and token tDECREMENT resolved as shift.
Conflict in state 138 between rule 69 and token tDOT resolved as shift.
Conflict in state 138 between rule 69 and token tRIGHTBRACKET resolved as shift.
Conflict in state 139 between rule 70 and token tCONDTEST resolved as reduce.
Conflict in state 139 between rule 70 and token tLOR resolved as reduce.
Conflict in state 139 between rule 70 and token tLAND resolved as reduce.
Conflict in state 139 between rule 70 and token tOR resolved as reduce.
Conflict in state 139 between rule 70 and token tXOR resolved as reduce.
Conflict in state 139 between rule 70 and token tAND resolved as reduce.
Conflict in state 139 between rule 70 and token tEQ resolved as reduce.
Conflict in state 139 between rule 70 and token tNE resolved as reduce.
Conflict in state 139 between rule 70 and token tLT resolved as reduce.
Conflict in state 139 between rule 70 and token tLE resolved as reduce.
Conflict in state 139 between rule 70 and token tGE resolved as reduce.
Conflict in state 139 between rule 70 and token tGT resolved as reduce.
Conflict in state 139 between rule 70 and token tRSHIFT resolved as shift.
Conflict in state 139 between rule 70 and token tLSHIFT resolved as shift.
Conflict in state 139 between rule 70 and token tRSHIFTFILL resolved as shift.
Conflict in state 139 between rule 70 and token tPLUS resolved as shift.
Conflict in state 139 between rule 70 and token tMINUS resolved as shift.
Conflict in state 139 between rule 70 and token tMULTIPLY resolved as shift.
Conflict in state 139 between rule 70 and token tDIVIDE resolved as shift.
Conflict in state 139 between rule 70 and token tMOD resolved as shift.
Conflict in state 139 between rule 70 and token tINCREMENT resolved as shift.
Conflict in state 139 between rule 70 and token tDECREMENT resolved as shift.
Conflict in state 139 between rule 70 and token tDOT resolved as shift.
Conflict in state 139 between rule 70 and token tRIGHTBRACKET resolved as shift.
Conflict in state 140 between rule 71 and token tCONDTEST resolved as reduce.
Conflict in state 140 between rule 71 and token tLOR resolved as reduce.
Conflict in state 140 between rule 71 and token tLAND resolved as reduce.
Conflict in state 140 between rule 71 and token tOR resolved as reduce.
Conflict in state 140 between rule 71 and token tXOR resolved as reduce.
Conflict in state 140 between rule 71 and token tAND resolved as reduce.
Conflict in state 140 between rule 71 and token tEQ resolved as reduce.
Conflict in state 140 between rule 71 and token tNE resolved as reduce.
Conflict in state 140 between rule 71 and token tLT resolved as reduce.
Conflict in state 140 between rule 71 and token tLE resolved as reduce.
Conflict in state 140 between rule 71 and token tGE resolved as reduce.
Conflict in state 140 between rule 71 and token tGT resolved as reduce.
Conflict in state 140 between rule 71 and token tRSHIFT resolved as shift.
Conflict in state 140 between rule 71 and token tLSHIFT resolved as shift.
Conflict in state 140 between rule 71 and token tRSHIFTFILL resolved as shift.
Conflict in state 140 between rule 71 and token tPLUS resolved as shift.
Conflict in state 140 between rule 71 and token tMINUS resolved as shift.
Conflict in state 140 between rule 71 and token tMULTIPLY resolved as shift.
Conflict in state 140 between rule 71 and token tDIVIDE resolved as shift.
Conflict in state 140 between rule 71 and token tMOD resolved as shift.
Conflict in state 140 between rule 71 and token tINCREMENT resolved as shift.
Conflict in state 140 between rule 71 and token tDECREMENT resolved as shift.
Conflict in state 140 between rule 71 and token tDOT resolved as shift.
Conflict in state 140 between rule 71 and token tRIGHTBRACKET resolved as shift.
Conflict in state 141 between rule 83 and token tCONDTEST resolved as reduce.
Conflict in state 141 between rule 83 and token tLOR resolved as reduce.
Conflict in state 141 between rule 83 and token tLAND resolved as reduce.
Conflict in state 141 between rule 83 and token tOR resolved as reduce.
Conflict in state 141 between rule 83 and token tXOR resolved as reduce.
Conflict in state 141 between rule 83 and token tAND resolved as reduce.
Conflict in state 141 between rule 83 and token tEQ resolved as reduce.
Conflict in state 141 between rule 83 and token tNE resolved as reduce.
Conflict in state 141 between rule 83 and token tLT resolved as reduce.
Conflict in state 141 between rule 83 and token tLE resolved as reduce.
Conflict in state 141 between rule 83 and token tGE resolved as reduce.
Conflict in state 141 between rule 83 and token tGT resolved as reduce.
Conflict in state 141 between rule 83 and token tRSHIFT resolved as reduce.
Conflict in state 141 between rule 83 and token tLSHIFT resolved as reduce.
Conflict in state 141 between rule 83 and token tRSHIFTFILL resolved as reduce.
Conflict in state 141 between rule 83 and token tPLUS resolved as shift.
Conflict in state 141 between rule 83 and token tMINUS resolved as shift.
Conflict in state 141 between rule 83 and token tMULTIPLY resolved as shift.
Conflict in state 141 between rule 83 and token tDIVIDE resolved as shift.
Conflict in state 141 between rule 83 and token tMOD resolved as shift.
Conflict in state 141 between rule 83 and token tINCREMENT resolved as shift.
Conflict in state 141 between rule 83 and token tDECREMENT resolved as shift.
Conflict in state 141 between rule 83 and token tDOT resolved as shift.
Conflict in state 141 between rule 83 and token tRIGHTBRACKET resolved as shift.
Conflict in state 142 between rule 82 and token tCONDTEST resolved as reduce.
Conflict in state 142 between rule 82 and token tLOR resolved as reduce.
Conflict in state 142 between rule 82 and token tLAND resolved as reduce.
Conflict in state 142 between rule 82 and token tOR resolved as reduce.
Conflict in state 142 between rule 82 and token tXOR resolved as reduce.
Conflict in state 142 between rule 82 and token tAND resolved as reduce.
Conflict in state 142 between rule 82 and token tEQ resolved as reduce.
Conflict in state 142 between rule 82 and token tNE resolved as reduce.
Conflict in state 142 between rule 82 and token tLT resolved as reduce.
Conflict in state 142 between rule 82 and token tLE resolved as reduce.
Conflict in state 142 between rule 82 and token tGE resolved as reduce.
Conflict in state 142 between rule 82 and token tGT resolved as reduce.
Conflict in state 142 between rule 82 and token tRSHIFT resolved as reduce.
Conflict in state 142 between rule 82 and token tLSHIFT resolved as reduce.
Conflict in state 142 between rule 82 and token tRSHIFTFILL resolved as reduce.
Conflict in state 142 between rule 82 and token tPLUS resolved as shift.
Conflict in state 142 between rule 82 and token tMINUS resolved as shift.
Conflict in state 142 between rule 82 and token tMULTIPLY resolved as shift.
Conflict in state 142 between rule 82 and token tDIVIDE resolved as shift.
Conflict in state 142 between rule 82 and token tMOD resolved as shift.
Conflict in state 142 between rule 82 and token tINCREMENT resolved as shift.
Conflict in state 142 between rule 82 and token tDECREMENT resolved as shift.
Conflict in state 142 between rule 82 and token tDOT resolved as shift.
Conflict in state 142 between rule 82 and token tRIGHTBRACKET resolved as shift.
Conflict in state 143 between rule 84 and token tCONDTEST resolved as reduce.
Conflict in state 143 between rule 84 and token tLOR resolved as reduce.
Conflict in state 143 between rule 84 and token tLAND resolved as reduce.
Conflict in state 143 between rule 84 and token tOR resolved as reduce.
Conflict in state 143 between rule 84 and token tXOR resolved as reduce.
Conflict in state 143 between rule 84 and token tAND resolved as reduce.
Conflict in state 143 between rule 84 and token tEQ resolved as reduce.
Conflict in state 143 between rule 84 and token tNE resolved as reduce.
Conflict in state 143 between rule 84 and token tLT resolved as reduce.
Conflict in state 143 between rule 84 and token tLE resolved as reduce.
Conflict in state 143 between rule 84 and token tGE resolved as reduce.
Conflict in state 143 between rule 84 and token tGT resolved as reduce.
Conflict in state 143 between rule 84 and token tRSHIFT resolved as reduce.
Conflict in state 143 between rule 84 and token tLSHIFT resolved as reduce.
Conflict in state 143 between rule 84 and token tRSHIFTFILL resolved as reduce.
Conflict in state 143 between rule 84 and token tPLUS resolved as shift.
Conflict in state 143 between rule 84 and token tMINUS resolved as shift.
Conflict in state 143 between rule 84 and token tMULTIPLY resolved as shift.
Conflict in state 143 between rule 84 and token tDIVIDE resolved as shift.
Conflict in state 143 between rule 84 and token tMOD resolved as shift.
Conflict in state 143 between rule 84 and token tINCREMENT resolved as shift.
Conflict in state 143 between rule 84 and token tDECREMENT resolved as shift.
Conflict in state 143 between rule 84 and token tDOT resolved as shift.
Conflict in state 143 between rule 84 and token tRIGHTBRACKET resolved as shift.
Conflict in state 144 between rule 74 and token tCONDTEST resolved as reduce.
Conflict in state 144 between rule 74 and token tLOR resolved as reduce.
Conflict in state 144 between rule 74 and token tLAND resolved as reduce.
Conflict in state 144 between rule 74 and token tOR resolved as reduce.
Conflict in state 144 between rule 74 and token tXOR resolved as reduce.
Conflict in state 144 between rule 74 and token tAND resolved as reduce.
Conflict in state 144 between rule 74 and token tEQ resolved as reduce.
Conflict in state 144 between rule 74 and token tNE resolved as reduce.
Conflict in state 144 between rule 74 and token tLT resolved as reduce.
Conflict in state 144 between rule 74 and token tLE resolved as reduce.
Conflict in state 144 between rule 74 and token tGE resolved as reduce.
Conflict in state 144 between rule 74 and token tGT resolved as reduce.
Conflict in state 144 between rule 74 and token tRSHIFT resolved as reduce.
Conflict in state 144 between rule 74 and token tLSHIFT resolved as reduce.
Conflict in state 144 between rule 74 and token tRSHIFTFILL resolved as reduce.
Conflict in state 144 between rule 74 and token tPLUS resolved as reduce.
Conflict in state 144 between rule 74 and token tMINUS resolved as reduce.
Conflict in state 144 between rule 74 and token tMULTIPLY resolved as shift.
Conflict in state 144 between rule 74 and token tDIVIDE resolved as shift.
Conflict in state 144 between rule 74 and token tMOD resolved as shift.
Conflict in state 144 between rule 74 and token tINCREMENT resolved as shift.
Conflict in state 144 between rule 74 and token tDECREMENT resolved as shift.
Conflict in state 144 between rule 74 and token tDOT resolved as shift.
Conflict in state 144 between rule 74 and token tRIGHTBRACKET resolved as shift.
Conflict in state 145 between rule 75 and token tCONDTEST resolved as reduce.
Conflict in state 145 between rule 75 and token tLOR resolved as reduce.
Conflict in state 145 between rule 75 and token tLAND resolved as reduce.
Conflict in state 145 between rule 75 and token tOR resolved as reduce.
Conflict in state 145 between rule 75 and token tXOR resolved as reduce.
Conflict in state 145 between rule 75 and token tAND resolved as reduce.
Conflict in state 145 between rule 75 and token tEQ resolved as reduce.
Conflict in state 145 between rule 75 and token tNE resolved as reduce.
Conflict in state 145 between rule 75 and token tLT resolved as reduce.
Conflict in state 145 between rule 75 and token tLE resolved as reduce.
Conflict in state 145 between rule 75 and token tGE resolved as reduce.
Conflict in state 145 between rule 75 and token tGT resolved as reduce.
Conflict in state 145 between rule 75 and token tRSHIFT resolved as reduce.
Conflict in state 145 between rule 75 and token tLSHIFT resolved as reduce.
Conflict in state 145 between rule 75 and token tRSHIFTFILL resolved as reduce.
Conflict in state 145 between rule 75 and token tPLUS resolved as reduce.
Conflict in state 145 between rule 75 and token tMINUS resolved as reduce.
Conflict in state 145 between rule 75 and token tMULTIPLY resolved as shift.
Conflict in state 145 between rule 75 and token tDIVIDE resolved as shift.
Conflict in state 145 between rule 75 and token tMOD resolved as shift.
Conflict in state 145 between rule 75 and token tINCREMENT resolved as shift.
Conflict in state 145 between rule 75 and token tDECREMENT resolved as shift.
Conflict in state 145 between rule 75 and token tDOT resolved as shift.
Conflict in state 145 between rule 75 and token tRIGHTBRACKET resolved as shift.
Conflict in state 146 between rule 76 and token tCONDTEST resolved as reduce.
Conflict in state 146 between rule 76 and token tLOR resolved as reduce.
Conflict in state 146 between rule 76 and token tLAND resolved as reduce.
Conflict in state 146 between rule 76 and token tOR resolved as reduce.
Conflict in state 146 between rule 76 and token tXOR resolved as reduce.
Conflict in state 146 between rule 76 and token tAND resolved as reduce.
Conflict in state 146 between rule 76 and token tEQ resolved as reduce.
Conflict in state 146 between rule 76 and token tNE resolved as reduce.
Conflict in state 146 between rule 76 and token tLT resolved as reduce.
Conflict in state 146 between rule 76 and token tLE resolved as reduce.
Conflict in state 146 between rule 76 and token tGE resolved as reduce.
Conflict in state 146 between rule 76 and token tGT resolved as reduce.
Conflict in state 146 between rule 76 and token tRSHIFT resolved as reduce.
Conflict in state 146 between rule 76 and token tLSHIFT resolved as reduce.
Conflict in state 146 between rule 76 and token tRSHIFTFILL resolved as reduce.
Conflict in state 146 between rule 76 and token tPLUS resolved as reduce.
Conflict in state 146 between rule 76 and token tMINUS resolved as reduce.
Conflict in state 146 between rule 76 and token tMULTIPLY resolved as reduce.
Conflict in state 146 between rule 76 and token tDIVIDE resolved as reduce.
Conflict in state 146 between rule 76 and token tMOD resolved as reduce.
Conflict in state 146 between rule 76 and token tINCREMENT resolved as shift.
Conflict in state 146 between rule 76 and token tDECREMENT resolved as shift.
Conflict in state 146 between rule 76 and token tDOT resolved as shift.
Conflict in state 146 between rule 76 and token tRIGHTBRACKET resolved as shift.
Conflict in state 147 between rule 77 and token tCONDTEST resolved as reduce.
Conflict in state 147 between rule 77 and token tLOR resolved as reduce.
Conflict in state 147 between rule 77 and token tLAND resolved as reduce.
Conflict in state 147 between rule 77 and token tOR resolved as reduce.
Conflict in state 147 between rule 77 and token tXOR resolved as reduce.
Conflict in state 147 between rule 77 and token tAND resolved as reduce.
Conflict in state 147 between rule 77 and token tEQ resolved as reduce.
Conflict in state 147 between rule 77 and token tNE resolved as reduce.
Conflict in state 147 between rule 77 and token tLT resolved as reduce.
Conflict in state 147 between rule 77 and token tLE resolved as reduce.
Conflict in state 147 between rule 77 and token tGE resolved as reduce.
Conflict in state 147 between rule 77 and token tGT resolved as reduce.
Conflict in state 147 between rule 77 and token tRSHIFT resolved as reduce.
Conflict in state 147 between rule 77 and token tLSHIFT resolved as reduce.
Conflict in state 147 between rule 77 and token tRSHIFTFILL resolved as reduce.
Conflict in state 147 between rule 77 and token tPLUS resolved as reduce.
Conflict in state 147 between rule 77 and token tMINUS resolved as reduce.
Conflict in state 147 between rule 77 and token tMULTIPLY resolved as reduce.
Conflict in state 147 between rule 77 and token tDIVIDE resolved as reduce.
Conflict in state 147 between rule 77 and token tMOD resolved as reduce.
Conflict in state 147 between rule 77 and token tINCREMENT resolved as shift.
Conflict in state 147 between rule 77 and token tDECREMENT resolved as shift.
Conflict in state 147 between rule 77 and token tDOT resolved as shift.
Conflict in state 147 between rule 77 and token tRIGHTBRACKET resolved as shift.
Conflict in state 148 between rule 78 and token tCONDTEST resolved as reduce.
Conflict in state 148 between rule 78 and token tLOR resolved as reduce.
Conflict in state 148 between rule 78 and token tLAND resolved as reduce.
Conflict in state 148 between rule 78 and token tOR resolved as reduce.
Conflict in state 148 between rule 78 and token tXOR resolved as reduce.
Conflict in state 148 between rule 78 and token tAND resolved as reduce.
Conflict in state 148 between rule 78 and token tEQ resolved as reduce.
Conflict in state 148 between rule 78 and token tNE resolved as reduce.
Conflict in state 148 between rule 78 and token tLT resolved as reduce.
Conflict in state 148 between rule 78 and token tLE resolved as reduce.
Conflict in state 148 between rule 78 and token tGE resolved as reduce.
Conflict in state 148 between rule 78 and token tGT resolved as reduce.
Conflict in state 148 between rule 78 and token tRSHIFT resolved as reduce.
Conflict in state 148 between rule 78 and token tLSHIFT resolved as reduce.
Conflict in state 148 between rule 78 and token tRSHIFTFILL resolved as reduce.
Conflict in state 148 between rule 78 and token tPLUS resolved as reduce.
Conflict in state 148 between rule 78 and token tMINUS resolved as reduce.
Conflict in state 148 between rule 78 and token tMULTIPLY resolved as reduce.
Conflict in state 148 between rule 78 and token tDIVIDE resolved as reduce.
Conflict in state 148 between rule 78 and token tMOD resolved as reduce.
Conflict in state 148 between rule 78 and token tINCREMENT resolved as shift.
Conflict in state 148 between rule 78 and token tDECREMENT resolved as shift.
Conflict in state 148 between rule 78 and token tDOT resolved as shift.
Conflict in state 148 between rule 78 and token tRIGHTBRACKET resolved as shift.
Conflict in state 151 between rule 49 and token tCONDTEST resolved as shift.
Conflict in state 151 between rule 49 and token tLOR resolved as shift.
Conflict in state 151 between rule 49 and token tLAND resolved as shift.
Conflict in state 151 between rule 49 and token tOR resolved as shift.
Conflict in state 151 between rule 49 and token tXOR resolved as shift.
Conflict in state 151 between rule 49 and token tAND resolved as shift.
Conflict in state 151 between rule 49 and token tEQ resolved as shift.
Conflict in state 151 between rule 49 and token tNE resolved as shift.
Conflict in state 151 between rule 49 and token tLT resolved as shift.
Conflict in state 151 between rule 49 and token tLE resolved as shift.
Conflict in state 151 between rule 49 and token tGE resolved as shift.
Conflict in state 151 between rule 49 and token tGT resolved as shift.
Conflict in state 151 between rule 49 and token tRSHIFT resolved as shift.
Conflict in state 151 between rule 49 and token tLSHIFT resolved as shift.
Conflict in state 151 between rule 49 and token tRSHIFTFILL resolved as shift.
Conflict in state 151 between rule 49 and token tPLUS resolved as shift.
Conflict in state 151 between rule 49 and token tMINUS resolved as shift.
Conflict in state 151 between rule 49 and token tMULTIPLY resolved as shift.
Conflict in state 151 between rule 49 and token tDIVIDE resolved as shift.
Conflict in state 151 between rule 49 and token tMOD resolved as shift.
Conflict in state 151 between rule 49 and token tINCREMENT resolved as shift.
Conflict in state 151 between rule 49 and token tDECREMENT resolved as shift.
Conflict in state 151 between rule 49 and token tDOT resolved as shift.
Conflict in state 151 between rule 49 and token tRIGHTBRACKET resolved as shift.
Conflict in state 152 between rule 50 and token tCONDTEST resolved as shift.
Conflict in state 152 between rule 50 and token tLOR resolved as shift.
Conflict in state 152 between rule 50 and token tLAND resolved as shift.
Conflict in state 152 between rule 50 and token tOR resolved as shift.
Conflict in state 152 between rule 50 and token tXOR resolved as shift.
Conflict in state 152 between rule 50 and token tAND resolved as shift.
Conflict in state 152 between rule 50 and token tEQ resolved as shift.
Conflict in state 152 between rule 50 and token tNE resolved as shift.
Conflict in state 152 between rule 50 and token tLT resolved as shift.
Conflict in state 152 between rule 50 and token tLE resolved as shift.
Conflict in state 152 between rule 50 and token tGE resolved as shift.
Conflict in state 152 between rule 50 and token tGT resolved as shift.
Conflict in state 152 between rule 50 and token tRSHIFT resolved as shift.
Conflict in state 152 between rule 50 and token tLSHIFT resolved as shift.
Conflict in state 152 between rule 50 and token tRSHIFTFILL resolved as shift.
Conflict in state 152 between rule 50 and token tPLUS resolved as shift.
Conflict in state 152 between rule 50 and token tMINUS resolved as shift.
Conflict in state 152 between rule 50 and token tMULTIPLY resolved as shift.
Conflict in state 152 between rule 50 and token tDIVIDE resolved as shift.
Conflict in state 152 between rule 50 and token tMOD resolved as shift.
Conflict in state 152 between rule 50 and token tINCREMENT resolved as shift.
Conflict in state 152 between rule 50 and token tDECREMENT resolved as shift.
Conflict in state 152 between rule 50 and token tDOT resolved as shift.
Conflict in state 152 between rule 50 and token tRIGHTBRACKET resolved as shift.
Conflict in state 153 between rule 51 and token tCONDTEST resolved as shift.
Conflict in state 153 between rule 51 and token tLOR resolved as shift.
Conflict in state 153 between rule 51 and token tLAND resolved as shift.
Conflict in state 153 between rule 51 and token tOR resolved as shift.
Conflict in state 153 between rule 51 and token tXOR resolved as shift.
Conflict in state 153 between rule 51 and token tAND resolved as shift.
Conflict in state 153 between rule 51 and token tEQ resolved as shift.
Conflict in state 153 between rule 51 and token tNE resolved as shift.
Conflict in state 153 between rule 51 and token tLT resolved as shift.
Conflict in state 153 between rule 51 and token tLE resolved as shift.
Conflict in state 153 between rule 51 and token tGE resolved as shift.
Conflict in state 153 between rule 51 and token tGT resolved as shift.
Conflict in state 153 between rule 51 and token tRSHIFT resolved as shift.
Conflict in state 153 between rule 51 and token tLSHIFT resolved as shift.
Conflict in state 153 between rule 51 and token tRSHIFTFILL resolved as shift.
Conflict in state 153 between rule 51 and token tPLUS resolved as shift.
Conflict in state 153 between rule 51 and token tMINUS resolved as shift.
Conflict in state 153 between rule 51 and token tMULTIPLY resolved as shift.
Conflict in state 153 between rule 51 and token tDIVIDE resolved as shift.
Conflict in state 153 between rule 51 and token tMOD resolved as shift.
Conflict in state 153 between rule 51 and token tINCREMENT resolved as shift.
Conflict in state 153 between rule 51 and token tDECREMENT resolved as shift.
Conflict in state 153 between rule 51 and token tDOT resolved as shift.
Conflict in state 153 between rule 51 and token tRIGHTBRACKET resolved as shift.
Conflict in state 154 between rule 52 and token tCONDTEST resolved as shift.
Conflict in state 154 between rule 52 and token tLOR resolved as shift.
Conflict in state 154 between rule 52 and token tLAND resolved as shift.
Conflict in state 154 between rule 52 and token tOR resolved as shift.
Conflict in state 154 between rule 52 and token tXOR resolved as shift.
Conflict in state 154 between rule 52 and token tAND resolved as shift.
Conflict in state 154 between rule 52 and token tEQ resolved as shift.
Conflict in state 154 between rule 52 and token tNE resolved as shift.
Conflict in state 154 between rule 52 and token tLT resolved as shift.
Conflict in state 154 between rule 52 and token tLE resolved as shift.
Conflict in state 154 between rule 52 and token tGE resolved as shift.
Conflict in state 154 between rule 52 and token tGT resolved as shift.
Conflict in state 154 between rule 52 and token tRSHIFT resolved as shift.
Conflict in state 154 between rule 52 and token tLSHIFT resolved as shift.
Conflict in state 154 between rule 52 and token tRSHIFTFILL resolved as shift.
Conflict in state 154 between rule 52 and token tPLUS resolved as shift.
Conflict in state 154 between rule 52 and token tMINUS resolved as shift.
Conflict in state 154 between rule 52 and token tMULTIPLY resolved as shift.
Conflict in state 154 between rule 52 and token tDIVIDE resolved as shift.
Conflict in state 154 between rule 52 and token tMOD resolved as shift.
Conflict in state 154 between rule 52 and token tINCREMENT resolved as shift.
Conflict in state 154 between rule 52 and token tDECREMENT resolved as shift.
Conflict in state 154 between rule 52 and token tDOT resolved as shift.
Conflict in state 154 between rule 52 and token tRIGHTBRACKET resolved as shift.
Conflict in state 155 between rule 53 and token tCONDTEST resolved as shift.
Conflict in state 155 between rule 53 and token tLOR resolved as shift.
Conflict in state 155 between rule 53 and token tLAND resolved as shift.
Conflict in state 155 between rule 53 and token tOR resolved as shift.
Conflict in state 155 between rule 53 and token tXOR resolved as shift.
Conflict in state 155 between rule 53 and token tAND resolved as shift.
Conflict in state 155 between rule 53 and token tEQ resolved as shift.
Conflict in state 155 between rule 53 and token tNE resolved as shift.
Conflict in state 155 between rule 53 and token tLT resolved as shift.
Conflict in state 155 between rule 53 and token tLE resolved as shift.
Conflict in state 155 between rule 53 and token tGE resolved as shift.
Conflict in state 155 between rule 53 and token tGT resolved as shift.
Conflict in state 155 between rule 53 and token tRSHIFT resolved as shift.
Conflict in state 155 between rule 53 and token tLSHIFT resolved as shift.
Conflict in state 155 between rule 53 and token tRSHIFTFILL resolved as shift.
Conflict in state 155 between rule 53 and token tPLUS resolved as shift.
Conflict in state 155 between rule 53 and token tMINUS resolved as shift.
Conflict in state 155 between rule 53 and token tMULTIPLY resolved as shift.
Conflict in state 155 between rule 53 and token tDIVIDE resolved as shift.
Conflict in state 155 between rule 53 and token tMOD resolved as shift.
Conflict in state 155 between rule 53 and token tINCREMENT resolved as shift.
Conflict in state 155 between rule 53 and token tDECREMENT resolved as shift.
Conflict in state 155 between rule 53 and token tDOT resolved as shift.
Conflict in state 155 between rule 53 and token tRIGHTBRACKET resolved as shift.
Conflict in state 156 between rule 54 and token tCONDTEST resolved as shift.
Conflict in state 156 between rule 54 and token tLOR resolved as shift.
Conflict in state 156 between rule 54 and token tLAND resolved as shift.
Conflict in state 156 between rule 54 and token tOR resolved as shift.
Conflict in state 156 between rule 54 and token tXOR resolved as shift.
Conflict in state 156 between rule 54 and token tAND resolved as shift.
Conflict in state 156 between rule 54 and token tEQ resolved as shift.
Conflict in state 156 between rule 54 and token tNE resolved as shift.
Conflict in state 156 between rule 54 and token tLT resolved as shift.
Conflict in state 156 between rule 54 and token tLE resolved as shift.
Conflict in state 156 between rule 54 and token tGE resolved as shift.
Conflict in state 156 between rule 54 and token tGT resolved as shift.
Conflict in state 156 between rule 54 and token tRSHIFT resolved as shift.
Conflict in state 156 between rule 54 and token tLSHIFT resolved as shift.
Conflict in state 156 between rule 54 and token tRSHIFTFILL resolved as shift.
Conflict in state 156 between rule 54 and token tPLUS resolved as shift.
Conflict in state 156 between rule 54 and token tMINUS resolved as shift.
Conflict in state 156 between rule 54 and token tMULTIPLY resolved as shift.
Conflict in state 156 between rule 54 and token tDIVIDE resolved as shift.
Conflict in state 156 between rule 54 and token tMOD resolved as shift.
Conflict in state 156 between rule 54 and token tINCREMENT resolved as shift.
Conflict in state 156 between rule 54 and token tDECREMENT resolved as shift.
Conflict in state 156 between rule 54 and token tDOT resolved as shift.
Conflict in state 156 between rule 54 and token tRIGHTBRACKET resolved as shift.
Conflict in state 157 between rule 59 and token tCONDTEST resolved as shift.
Conflict in state 157 between rule 59 and token tLOR resolved as shift.
Conflict in state 157 between rule 59 and token tLAND resolved as shift.
Conflict in state 157 between rule 59 and token tOR resolved as shift.
Conflict in state 157 between rule 59 and token tXOR resolved as shift.
Conflict in state 157 between rule 59 and token tAND resolved as shift.
Conflict in state 157 between rule 59 and token tEQ resolved as shift.
Conflict in state 157 between rule 59 and token tNE resolved as shift.
Conflict in state 157 between rule 59 and token tLT resolved as shift.
Conflict in state 157 between rule 59 and token tLE resolved as shift.
Conflict in state 157 between rule 59 and token tGE resolved as shift.
Conflict in state 157 between rule 59 and token tGT resolved as shift.
Conflict in state 157 between rule 59 and token tRSHIFT resolved as shift.
Conflict in state 157 between rule 59 and token tLSHIFT resolved as shift.
Conflict in state 157 between rule 59 and token tRSHIFTFILL resolved as shift.
Conflict in state 157 between rule 59 and token tPLUS resolved as shift.
Conflict in state 157 between rule 59 and token tMINUS resolved as shift.
Conflict in state 157 between rule 59 and token tMULTIPLY resolved as shift.
Conflict in state 157 between rule 59 and token tDIVIDE resolved as shift.
Conflict in state 157 between rule 59 and token tMOD resolved as shift.
Conflict in state 157 between rule 59 and token tINCREMENT resolved as shift.
Conflict in state 157 between rule 59 and token tDECREMENT resolved as shift.
Conflict in state 157 between rule 59 and token tDOT resolved as shift.
Conflict in state 157 between rule 59 and token tRIGHTBRACKET resolved as shift.
Conflict in state 158 between rule 58 and token tCONDTEST resolved as shift.
Conflict in state 158 between rule 58 and token tLOR resolved as shift.
Conflict in state 158 between rule 58 and token tLAND resolved as shift.
Conflict in state 158 between rule 58 and token tOR resolved as shift.
Conflict in state 158 between rule 58 and token tXOR resolved as shift.
Conflict in state 158 between rule 58 and token tAND resolved as shift.
Conflict in state 158 between rule 58 and token tEQ resolved as shift.
Conflict in state 158 between rule 58 and token tNE resolved as shift.
Conflict in state 158 between rule 58 and token tLT resolved as shift.
Conflict in state 158 between rule 58 and token tLE resolved as shift.
Conflict in state 158 between rule 58 and token tGE resolved as shift.
Conflict in state 158 between rule 58 and token tGT resolved as shift.
Conflict in state 158 between rule 58 and token tRSHIFT resolved as shift.
Conflict in state 158 between rule 58 and token tLSHIFT resolved as shift.
Conflict in state 158 between rule 58 and token tRSHIFTFILL resolved as shift.
Conflict in state 158 between rule 58 and token tPLUS resolved as shift.
Conflict in state 158 between rule 58 and token tMINUS resolved as shift.
Conflict in state 158 between rule 58 and token tMULTIPLY resolved as shift.
Conflict in state 158 between rule 58 and token tDIVIDE resolved as shift.
Conflict in state 158 between rule 58 and token tMOD resolved as shift.
Conflict in state 158 between rule 58 and token tINCREMENT resolved as shift.
Conflict in state 158 between rule 58 and token tDECREMENT resolved as shift.
Conflict in state 158 between rule 58 and token tDOT resolved as shift.
Conflict in state 158 between rule 58 and token tRIGHTBRACKET resolved as shift.
Conflict in state 159 between rule 60 and token tCONDTEST resolved as shift.
Conflict in state 159 between rule 60 and token tLOR resolved as shift.
Conflict in state 159 between rule 60 and token tLAND resolved as shift.
Conflict in state 159 between rule 60 and token tOR resolved as shift.
Conflict in state 159 between rule 60 and token tXOR resolved as shift.
Conflict in state 159 between rule 60 and token tAND resolved as shift.
Conflict in state 159 between rule 60 and token tEQ resolved as shift.
Conflict in state 159 between rule 60 and token tNE resolved as shift.
Conflict in state 159 between rule 60 and token tLT resolved as shift.
Conflict in state 159 between rule 60 and token tLE resolved as shift.
Conflict in state 159 between rule 60 and token tGE resolved as shift.
Conflict in state 159 between rule 60 and token tGT resolved as shift.
Conflict in state 159 between rule 60 and token tRSHIFT resolved as shift.
Conflict in state 159 between rule 60 and token tLSHIFT resolved as shift.
Conflict in state 159 between rule 60 and token tRSHIFTFILL resolved as shift.
Conflict in state 159 between rule 60 and token tPLUS resolved as shift.
Conflict in state 159 between rule 60 and token tMINUS resolved as shift.
Conflict in state 159 between rule 60 and token tMULTIPLY resolved as shift.
Conflict in state 159 between rule 60 and token tDIVIDE resolved as shift.
Conflict in state 159 between rule 60 and token tMOD resolved as shift.
Conflict in state 159 between rule 60 and token tINCREMENT resolved as shift.
Conflict in state 159 between rule 60 and token tDECREMENT resolved as shift.
Conflict in state 159 between rule 60 and token tDOT resolved as shift.
Conflict in state 159 between rule 60 and token tRIGHTBRACKET resolved as shift.
Conflict in state 160 between rule 55 and token tCONDTEST resolved as shift.
Conflict in state 160 between rule 55 and token tLOR resolved as shift.
Conflict in state 160 between rule 55 and token tLAND resolved as shift.
Conflict in state 160 between rule 55 and token tOR resolved as shift.
Conflict in state 160 between rule 55 and token tXOR resolved as shift.
Conflict in state 160 between rule 55 and token tAND resolved as shift.
Conflict in state 160 between rule 55 and token tEQ resolved as shift.
Conflict in state 160 between rule 55 and token tNE resolved as shift.
Conflict in state 160 between rule 55 and token tLT resolved as shift.
Conflict in state 160 between rule 55 and token tLE resolved as shift.
Conflict in state 160 between rule 55 and token tGE resolved as shift.
Conflict in state 160 between rule 55 and token tGT resolved as shift.
Conflict in state 160 between rule 55 and token tRSHIFT resolved as shift.
Conflict in state 160 between rule 55 and token tLSHIFT resolved as shift.
Conflict in state 160 between rule 55 and token tRSHIFTFILL resolved as shift.
Conflict in state 160 between rule 55 and token tPLUS resolved as shift.
Conflict in state 160 between rule 55 and token tMINUS resolved as shift.
Conflict in state 160 between rule 55 and token tMULTIPLY resolved as shift.
Conflict in state 160 between rule 55 and token tDIVIDE resolved as shift.
Conflict in state 160 between rule 55 and token tMOD resolved as shift.
Conflict in state 160 between rule 55 and token tINCREMENT resolved as shift.
Conflict in state 160 between rule 55 and token tDECREMENT resolved as shift.
Conflict in state 160 between rule 55 and token tDOT resolved as shift.
Conflict in state 160 between rule 55 and token tRIGHTBRACKET resolved as shift.
Conflict in state 161 between rule 57 and token tCONDTEST resolved as shift.
Conflict in state 161 between rule 57 and token tLOR resolved as shift.
Conflict in state 161 between rule 57 and token tLAND resolved as shift.
Conflict in state 161 between rule 57 and token tOR resolved as shift.
Conflict in state 161 between rule 57 and token tXOR resolved as shift.
Conflict in state 161 between rule 57 and token tAND resolved as shift.
Conflict in state 161 between rule 57 and token tEQ resolved as shift.
Conflict in state 161 between rule 57 and token tNE resolved as shift.
Conflict in state 161 between rule 57 and token tLT resolved as shift.
Conflict in state 161 between rule 57 and token tLE resolved as shift.
Conflict in state 161 between rule 57 and token tGE resolved as shift.
Conflict in state 161 between rule 57 and token tGT resolved as shift.
Conflict in state 161 between rule 57 and token tRSHIFT resolved as shift.
Conflict in state 161 between rule 57 and token tLSHIFT resolved as shift.
Conflict in state 161 between rule 57 and token tRSHIFTFILL resolved as shift.
Conflict in state 161 between rule 57 and token tPLUS resolved as shift.
Conflict in state 161 between rule 57 and token tMINUS resolved as shift.
Conflict in state 161 between rule 57 and token tMULTIPLY resolved as shift.
Conflict in state 161 between rule 57 and token tDIVIDE resolved as shift.
Conflict in state 161 between rule 57 and token tMOD resolved as shift.
Conflict in state 161 between rule 57 and token tINCREMENT resolved as shift.
Conflict in state 161 between rule 57 and token tDECREMENT resolved as shift.
Conflict in state 161 between rule 57 and token tDOT resolved as shift.
Conflict in state 161 between rule 57 and token tRIGHTBRACKET resolved as shift.
Conflict in state 162 between rule 56 and token tCONDTEST resolved as shift.
Conflict in state 162 between rule 56 and token tLOR resolved as shift.
Conflict in state 162 between rule 56 and token tLAND resolved as shift.
Conflict in state 162 between rule 56 and token tOR resolved as shift.
Conflict in state 162 between rule 56 and token tXOR resolved as shift.
Conflict in state 162 between rule 56 and token tAND resolved as shift.
Conflict in state 162 between rule 56 and token tEQ resolved as shift.
Conflict in state 162 between rule 56 and token tNE resolved as shift.
Conflict in state 162 between rule 56 and token tLT resolved as shift.
Conflict in state 162 between rule 56 and token tLE resolved as shift.
Conflict in state 162 between rule 56 and token tGE resolved as shift.
Conflict in state 162 between rule 56 and token tGT resolved as shift.
Conflict in state 162 between rule 56 and token tRSHIFT resolved as shift.
Conflict in state 162 between rule 56 and token tLSHIFT resolved as shift.
Conflict in state 162 between rule 56 and token tRSHIFTFILL resolved as shift.
Conflict in state 162 between rule 56 and token tPLUS resolved as shift.
Conflict in state 162 between rule 56 and token tMINUS resolved as shift.
Conflict in state 162 between rule 56 and token tMULTIPLY resolved as shift.
Conflict in state 162 between rule 56 and token tDIVIDE resolved as shift.
Conflict in state 162 between rule 56 and token tMOD resolved as shift.
Conflict in state 162 between rule 56 and token tINCREMENT resolved as shift.
Conflict in state 162 between rule 56 and token tDECREMENT resolved as shift.
Conflict in state 162 between rule 56 and token tDOT resolved as shift.
Conflict in state 162 between rule 56 and token tRIGHTBRACKET resolved as shift.
Conflict in state 183 between rule 65 and token tCONDTEST resolved as reduce.
Conflict in state 183 between rule 65 and token tLOR resolved as shift.
Conflict in state 183 between rule 65 and token tLAND resolved as shift.
Conflict in state 183 between rule 65 and token tOR resolved as shift.
Conflict in state 183 between rule 65 and token tXOR resolved as shift.
Conflict in state 183 between rule 65 and token tAND resolved as shift.
Conflict in state 183 between rule 65 and token tEQ resolved as shift.
Conflict in state 183 between rule 65 and token tNE resolved as shift.
Conflict in state 183 between rule 65 and token tLT resolved as shift.
Conflict in state 183 between rule 65 and token tLE resolved as shift.
Conflict in state 183 between rule 65 and token tGE resolved as shift.
Conflict in state 183 between rule 65 and token tGT resolved as shift.
Conflict in state 183 between rule 65 and token tRSHIFT resolved as shift.
Conflict in state 183 between rule 65 and token tLSHIFT resolved as shift.
Conflict in state 183 between rule 65 and token tRSHIFTFILL resolved as shift.
Conflict in state 183 between rule 65 and token tPLUS resolved as shift.
Conflict in state 183 between rule 65 and token tMINUS resolved as shift.
Conflict in state 183 between rule 65 and token tMULTIPLY resolved as shift.
Conflict in state 183 between rule 65 and token tDIVIDE resolved as shift.
Conflict in state 183 between rule 65 and token tMOD resolved as shift.
Conflict in state 183 between rule 65 and token tINCREMENT resolved as shift.
Conflict in state 183 between rule 65 and token tDECREMENT resolved as shift.
Conflict in state 183 between rule 65 and token tDOT resolved as shift.
Conflict in state 183 between rule 65 and token tRIGHTBRACKET resolved as shift.
State 177 contains 1 shift/reduce conflict.

Grammar
rule 1    script -> funcs
rule 2    script ->		/* empty */
rule 3    funcs -> funcs func
rule 4    funcs -> func
rule 5    func -> tFUNCTION bgnFunc '(' args ')' stmntblk
rule 6    bgnFunc -> tIDENTIFIER
rule 7    args -> args tCOMMA tIDENTIFIER
rule 8    args -> tIDENTIFIER
rule 9    args ->		/* empty */
rule 10   stmntblk -> '{' stmnts '}'
rule 11   stmntblk -> '{' '}'
rule 12   stmntblk -> stmnt
rule 13   stmnts -> stmnts stmnt
rule 14   stmnts -> stmnt
rule 15   stmnts -> stmnts error
rule 16   stmnt -> if
rule 17   stmnt -> for
rule 18   stmnt -> while
rule 19   stmnt -> comma_expr ';'
rule 20   stmnt -> return ';'
rule 21   stmnt -> with
rule 22   stmnt -> break ';'
rule 23   stmnt -> continue ';'
rule 24   stmnt -> varstmt ';'
rule 25   return -> tRETURN comma_expr
rule 26   return -> tRETURN
rule 27   if -> tIF '(' comma_expr ')' stmntblk
rule 28   if -> tIF '(' comma_expr ')' stmntblk tELSE stmntblk
rule 29   for -> tFOR '(' opt_expr ';' opt_expr ';' opt_expr ')' stmntblk
rule 30   for -> tFOR '(' var tIN expr ')' stmntblk
rule 31   break -> tBREAK
rule 32   continue -> tCONTINUE
rule 33   with -> tWITH '(' expr ')' stmntblk
rule 34   while -> tWHILE '(' comma_expr ')' stmntblk
rule 35   varentry -> tIDENTIFIER
rule 36   varentry -> tIDENTIFIER tASSIGN expr
rule 37   varentrys -> varentrys tCOMMA varentry
rule 38   varentrys -> varentry
rule 39   varentrys ->		/* empty */
rule 40   varstmt -> tVAR varentrys
rule 41   opt_expr -> comma_expr
rule 42   opt_expr ->		/* empty */
rule 43   comma_expr -> expr
rule 44   comma_expr -> expr tCOMMA comma_expr
rule 45   expr -> '(' comma_expr ')'
rule 46   expr -> tMINUS expr
rule 47   expr -> tNOT expr
rule 48   expr -> tONESCOMP expr
rule 49   expr -> leftvar tASSIGN expr
rule 50   expr -> leftvar tPLUSEQ expr
rule 51   expr -> leftvar tMINUSEQ expr
rule 52   expr -> leftvar tMULTIPLYEQ expr
rule 53   expr -> leftvar tDIVIDEEQ expr
rule 54   expr -> leftvar tMODEQ expr
rule 55   expr -> leftvar tANDEQ expr
rule 56   expr -> leftvar tOREQ expr
rule 57   expr -> leftvar tXOREQ expr
rule 58   expr -> leftvar tLSHIFTEQ expr
rule 59   expr -> leftvar tRSHIFTEQ expr
rule 60   expr -> leftvar tRSHIFTFILLEQ expr
rule 61   expr -> tINCREMENT expr
rule 62   expr -> tDECREMENT expr
rule 63   expr -> expr tINCREMENT
rule 64   expr -> expr tDECREMENT
rule 65   expr -> expr tCONDTEST expr tCONDSEP expr
rule 66   expr -> expr tEQ expr
rule 67   expr -> expr tNE expr
rule 68   expr -> expr tLT expr
rule 69   expr -> expr tLE expr
rule 70   expr -> expr tGE expr
rule 71   expr -> expr tGT expr
rule 72   expr -> expr tLAND expr
rule 73   expr -> expr tLOR expr
rule 74   expr -> expr tPLUS expr
rule 75   expr -> expr tMINUS expr
rule 76   expr -> expr tMULTIPLY expr
rule 77   expr -> expr tDIVIDE expr
rule 78   expr -> expr tMOD expr
rule 79   expr -> expr tAND expr
rule 80   expr -> expr tOR expr
rule 81   expr -> expr tXOR expr
rule 82   expr -> expr tLSHIFT expr
rule 83   expr -> expr tRSHIFT expr
rule 84   expr -> expr tRSHIFTFILL expr
rule 85   expr -> tSTRING
rule 86   expr -> tNUMBER
rule 87   expr -> tNULL
rule 88   expr -> objmethodcall
rule 89   expr -> funccall
rule 90   expr -> newcall
rule 91   expr -> objmemberaccess
rule 92   expr -> arrayderef
rule 93   expr -> var
rule 94   params -> params tCOMMA expr
rule 95   params -> expr
rule 96   params ->		/* empty */
rule 97   funccall -> tIDENTIFIER '(' params ')'
rule 98   objmethodcall -> expr tDOT tIDENTIFIER '(' params ')'
rule 99   newcall -> tNEW tIDENTIFIER '(' params ')'
rule 100  leftvar -> objmemberaccess
rule 101  leftvar -> arrayderef
rule 102  leftvar -> var
rule 103  objmemberaccess -> expr tDOT tIDENTIFIER
rule 104  arrayderef -> expr tRIGHTBRACKET comma_expr tLEFTBRACKET
rule 105  var -> tIDENTIFIER

Terminals, with rules where they appear

$ (-1)
'(' (40) 5 27 28 29 30 33 34 45 97 98 99
')' (41) 5 27 28 29 30 33 34 45 97 98 99
';' (59) 19 20 22 23 24 29
'{' (123) 10 11
'}' (125) 10 11
error (256) 15
tNUMBER (258) 86
tSTRING (259) 85
tIDENTIFIER (260) 6 7 8 35 36 97 98 99 103 105
tASSIGN (261) 36 49
tFUNCTION (262) 5
tIF (263) 27 28
tELSE (264) 28
tFOR (265) 29 30
tIN (266) 30
tWHILE (267) 34
tWITH (268) 33
tBREAK (269) 31
tCONTINUE (270) 32
tRETURN (271) 25 26
tNEW (272) 99
tVAR (273) 40
tNULL (274) 87
tCOMMA (275) 7 37 44 94
tPLUSEQ (276) 50
tMINUSEQ (277) 51
tMULTIPLYEQ (278) 52
tDIVIDEEQ (279) 53
tMODEQ (280) 54
tRSHIFTEQ (281) 59
tLSHIFTEQ (282) 58
tRSHIFTFILLEQ (283) 60
tANDEQ (284) 55
tXOREQ (285) 57
tOREQ (286) 56
tCONDTEST (287) 65
tCONDSEP (288) 65
tLOR (289) 73
tLAND (290) 72
tOR (291) 80
tXOR (292) 81
tAND (293) 79
tEQ (294) 66
tNE (295) 67
tLT (296) 68
tLE (297) 69
tGE (298) 70
tGT (299) 71
tRSHIFT (300) 83
tLSHIFT (301) 82
tRSHIFTFILL (302) 84
tPLUS (303) 74
tMINUS (304) 46 75
tMULTIPLY (305) 76
tDIVIDE (306) 77
tMOD (307) 78
tNOT (308) 47
tNEG (309)
tONESCOMP (310) 48
tINCREMENT (311) 61 63
tDECREMENT (312) 62 64
tDOT (313) 98 103
tRIGHTBRACKET (314) 104
tLEFTBRACKET (315) 104
tUNIMPL_KEYWORD (666)

Nonterminals, with rules where they appear

script (67)
    on left: 1 2
funcs (68)
    on left: 3 4, on right: 1 3
func (69)
    on left: 5, on right: 3 4
bgnFunc (70)
    on left: 6, on right: 5
args (71)
    on left: 7 8 9, on right: 5 7
stmntblk (72)
    on left: 10 11 12, on right: 5 27 28 29 30 33 34
stmnts (73)
    on left: 13 14 15, on right: 10 13 15
stmnt (74)
    on left: 16 17 18 19 20 21 22 23 24, on right: 12 13 14
return (75)
    on left: 25 26, on right: 20
if (76)
    on left: 27 28, on right: 16
for (77)
    on left: 29 30, on right: 17
break (78)
    on left: 31, on right: 22
continue (79)
    on left: 32, on right: 23
with (80)
    on left: 33, on right: 21
while (81)
    on left: 34, on right: 18
varentry (82)
    on left: 35 36, on right: 37 38
varentrys (83)
    on left: 37 38 39, on right: 37 40
varstmt (84)
    on left: 40, on right: 24
opt_expr (85)
    on left: 41 42, on right: 29
comma_expr (86)
    on left: 43 44, on right: 19 25 27 28 34 41 44 45 104
expr (87)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
    63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
    84 85 86 87 88 89 90 91 92 93, on right: 30 33 36 43 44 46 47 48
    49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
    70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 94 95 98 103 104
params (88)
    on left: 94 95 96, on right: 94 97 98 99
funccall (89)
    on left: 97, on right: 89
objmethodcall (90)
    on left: 98, on right: 88
newcall (91)
    on left: 99, on right: 90
leftvar (92)
    on left: 100 101 102, on right: 49 50 51 52 53 54 55 56 57 58 59
    60
objmemberaccess (93)
    on left: 103, on right: 91 100
arrayderef (94)
    on left: 104, on right: 92 101
var (95)
    on left: 105, on right: 30 93 102


state 0

    tFUNCTION	shift, and go to state 1

    $default	reduce using rule 2 (script)

    script	go to state 194
    funcs	go to state 2
    func	go to state 3



state 1

    func  ->  tFUNCTION . bgnFunc '(' args ')' stmntblk   (rule 5)

    tIDENTIFIER	shift, and go to state 4

    bgnFunc	go to state 5



state 2

    script  ->  funcs .   (rule 1)
    funcs  ->  funcs . func   (rule 3)

    tFUNCTION	shift, and go to state 1

    $default	reduce using rule 1 (script)

    func	go to state 6



state 3

    funcs  ->  func .   (rule 4)

    $default	reduce using rule 4 (funcs)



state 4

    bgnFunc  ->  tIDENTIFIER .   (rule 6)

    $default	reduce using rule 6 (bgnFunc)



state 5

    func  ->  tFUNCTION bgnFunc . '(' args ')' stmntblk   (rule 5)

    '(' 	shift, and go to state 7



state 6

    funcs  ->  funcs func .   (rule 3)

    $default	reduce using rule 3 (funcs)



state 7

    func  ->  tFUNCTION bgnFunc '(' . args ')' stmntblk   (rule 5)

    tIDENTIFIER	shift, and go to state 8

    $default	reduce using rule 9 (args)

    args	go to state 9



state 8

    args  ->  tIDENTIFIER .   (rule 8)

    $default	reduce using rule 8 (args)



state 9

    func  ->  tFUNCTION bgnFunc '(' args . ')' stmntblk   (rule 5)
    args  ->  args . tCOMMA tIDENTIFIER   (rule 7)

    tCOMMA	shift, and go to state 10
    ')' 	shift, and go to state 11



state 10

    args  ->  args tCOMMA . tIDENTIFIER   (rule 7)

    tIDENTIFIER	shift, and go to state 12



state 11

    func  ->  tFUNCTION bgnFunc '(' args ')' . stmntblk   (rule 5)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tIF 	shift, and go to state 16
    tFOR	shift, and go to state 17
    tWHILE	shift, and go to state 18
    tWITH	shift, and go to state 19
    tBREAK	shift, and go to state 20
    tCONTINUE	shift, and go to state 21
    tRETURN	shift, and go to state 22
    tNEW	shift, and go to state 23
    tVAR	shift, and go to state 24
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31
    '{' 	shift, and go to state 32

    stmntblk	go to state 33
    stmnt	go to state 34
    return	go to state 35
    if  	go to state 36
    for 	go to state 37
    break	go to state 38
    continue	go to state 39
    with	go to state 40
    while	go to state 41
    varstmt	go to state 42
    comma_expr	go to state 43
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 12

    args  ->  args tCOMMA tIDENTIFIER .   (rule 7)

    $default	reduce using rule 7 (args)



state 13

    expr  ->  tNUMBER .   (rule 86)

    $default	reduce using rule 86 (expr)



state 14

    expr  ->  tSTRING .   (rule 85)

    $default	reduce using rule 85 (expr)



state 15

    funccall  ->  tIDENTIFIER . '(' params ')'   (rule 97)
    var  ->  tIDENTIFIER .   (rule 105)

    '(' 	shift, and go to state 52

    $default	reduce using rule 105 (var)



state 16

    if  ->  tIF . '(' comma_expr ')' stmntblk   (rule 27)
    if  ->  tIF . '(' comma_expr ')' stmntblk tELSE stmntblk   (rule 28)

    '(' 	shift, and go to state 53



state 17

    for  ->  tFOR . '(' opt_expr ';' opt_expr ';' opt_expr ')' stmntblk   (rule 29)
    for  ->  tFOR . '(' var tIN expr ')' stmntblk   (rule 30)

    '(' 	shift, and go to state 54



state 18

    while  ->  tWHILE . '(' comma_expr ')' stmntblk   (rule 34)

    '(' 	shift, and go to state 55



state 19

    with  ->  tWITH . '(' expr ')' stmntblk   (rule 33)

    '(' 	shift, and go to state 56



state 20

    break  ->  tBREAK .   (rule 31)

    $default	reduce using rule 31 (break)



state 21

    continue  ->  tCONTINUE .   (rule 32)

    $default	reduce using rule 32 (continue)



state 22

    return  ->  tRETURN . comma_expr   (rule 25)
    return  ->  tRETURN .   (rule 26)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    $default	reduce using rule 26 (return)

    comma_expr	go to state 57
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 23

    newcall  ->  tNEW . tIDENTIFIER '(' params ')'   (rule 99)

    tIDENTIFIER	shift, and go to state 58



state 24

    varstmt  ->  tVAR . varentrys   (rule 40)

    tIDENTIFIER	shift, and go to state 59

    $default	reduce using rule 39 (varentrys)

    varentry	go to state 60
    varentrys	go to state 61



state 25

    expr  ->  tNULL .   (rule 87)

    $default	reduce using rule 87 (expr)



state 26

    expr  ->  tMINUS . expr   (rule 46)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 62
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 27

    expr  ->  tNOT . expr   (rule 47)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 63
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 28

    expr  ->  tONESCOMP . expr   (rule 48)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 64
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 29

    expr  ->  tINCREMENT . expr   (rule 61)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 65
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 30

    expr  ->  tDECREMENT . expr   (rule 62)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 66
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 31

    expr  ->  '(' . comma_expr ')'   (rule 45)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    comma_expr	go to state 67
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 32

    stmntblk  ->  '{' . stmnts '}'   (rule 10)
    stmntblk  ->  '{' . '}'   (rule 11)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tIF 	shift, and go to state 16
    tFOR	shift, and go to state 17
    tWHILE	shift, and go to state 18
    tWITH	shift, and go to state 19
    tBREAK	shift, and go to state 20
    tCONTINUE	shift, and go to state 21
    tRETURN	shift, and go to state 22
    tNEW	shift, and go to state 23
    tVAR	shift, and go to state 24
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31
    '}' 	shift, and go to state 68

    stmnts	go to state 69
    stmnt	go to state 70
    return	go to state 35
    if  	go to state 36
    for 	go to state 37
    break	go to state 38
    continue	go to state 39
    with	go to state 40
    while	go to state 41
    varstmt	go to state 42
    comma_expr	go to state 43
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 33

    func  ->  tFUNCTION bgnFunc '(' args ')' stmntblk .   (rule 5)

    $default	reduce using rule 5 (func)



state 34

    stmntblk  ->  stmnt .   (rule 12)

    $default	reduce using rule 12 (stmntblk)



state 35

    stmnt  ->  return . ';'   (rule 20)

    ';' 	shift, and go to state 71



state 36

    stmnt  ->  if .   (rule 16)

    $default	reduce using rule 16 (stmnt)



state 37

    stmnt  ->  for .   (rule 17)

    $default	reduce using rule 17 (stmnt)



state 38

    stmnt  ->  break . ';'   (rule 22)

    ';' 	shift, and go to state 72



state 39

    stmnt  ->  continue . ';'   (rule 23)

    ';' 	shift, and go to state 73



state 40

    stmnt  ->  with .   (rule 21)

    $default	reduce using rule 21 (stmnt)



state 41

    stmnt  ->  while .   (rule 18)

    $default	reduce using rule 18 (stmnt)



state 42

    stmnt  ->  varstmt . ';'   (rule 24)

    ';' 	shift, and go to state 74



state 43

    stmnt  ->  comma_expr . ';'   (rule 19)

    ';' 	shift, and go to state 75



state 44

    comma_expr  ->  expr .   (rule 43)
    comma_expr  ->  expr . tCOMMA comma_expr   (rule 44)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCOMMA	shift, and go to state 76
    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 43 (comma_expr)



state 45

    expr  ->  funccall .   (rule 89)

    $default	reduce using rule 89 (expr)



state 46

    expr  ->  objmethodcall .   (rule 88)

    $default	reduce using rule 88 (expr)



state 47

    expr  ->  newcall .   (rule 90)

    $default	reduce using rule 90 (expr)



state 48

    expr  ->  leftvar . tASSIGN expr   (rule 49)
    expr  ->  leftvar . tPLUSEQ expr   (rule 50)
    expr  ->  leftvar . tMINUSEQ expr   (rule 51)
    expr  ->  leftvar . tMULTIPLYEQ expr   (rule 52)
    expr  ->  leftvar . tDIVIDEEQ expr   (rule 53)
    expr  ->  leftvar . tMODEQ expr   (rule 54)
    expr  ->  leftvar . tANDEQ expr   (rule 55)
    expr  ->  leftvar . tOREQ expr   (rule 56)
    expr  ->  leftvar . tXOREQ expr   (rule 57)
    expr  ->  leftvar . tLSHIFTEQ expr   (rule 58)
    expr  ->  leftvar . tRSHIFTEQ expr   (rule 59)
    expr  ->  leftvar . tRSHIFTFILLEQ expr   (rule 60)

    tASSIGN	shift, and go to state 101
    tPLUSEQ	shift, and go to state 102
    tMINUSEQ	shift, and go to state 103
    tMULTIPLYEQ	shift, and go to state 104
    tDIVIDEEQ	shift, and go to state 105
    tMODEQ	shift, and go to state 106
    tRSHIFTEQ	shift, and go to state 107
    tLSHIFTEQ	shift, and go to state 108
    tRSHIFTFILLEQ	shift, and go to state 109
    tANDEQ	shift, and go to state 110
    tXOREQ	shift, and go to state 111
    tOREQ	shift, and go to state 112



state 49

    expr  ->  objmemberaccess .   (rule 91)
    leftvar  ->  objmemberaccess .   (rule 100)

    tASSIGN	reduce using rule 100 (leftvar)
    tPLUSEQ	reduce using rule 100 (leftvar)
    tMINUSEQ	reduce using rule 100 (leftvar)
    tMULTIPLYEQ	reduce using rule 100 (leftvar)
    tDIVIDEEQ	reduce using rule 100 (leftvar)
    tMODEQ	reduce using rule 100 (leftvar)
    tRSHIFTEQ	reduce using rule 100 (leftvar)
    tLSHIFTEQ	reduce using rule 100 (leftvar)
    tRSHIFTFILLEQ	reduce using rule 100 (leftvar)
    tANDEQ	reduce using rule 100 (leftvar)
    tXOREQ	reduce using rule 100 (leftvar)
    tOREQ	reduce using rule 100 (leftvar)
    $default	reduce using rule 91 (expr)



state 50

    expr  ->  arrayderef .   (rule 92)
    leftvar  ->  arrayderef .   (rule 101)

    tASSIGN	reduce using rule 101 (leftvar)
    tPLUSEQ	reduce using rule 101 (leftvar)
    tMINUSEQ	reduce using rule 101 (leftvar)
    tMULTIPLYEQ	reduce using rule 101 (leftvar)
    tDIVIDEEQ	reduce using rule 101 (leftvar)
    tMODEQ	reduce using rule 101 (leftvar)
    tRSHIFTEQ	reduce using rule 101 (leftvar)
    tLSHIFTEQ	reduce using rule 101 (leftvar)
    tRSHIFTFILLEQ	reduce using rule 101 (leftvar)
    tANDEQ	reduce using rule 101 (leftvar)
    tXOREQ	reduce using rule 101 (leftvar)
    tOREQ	reduce using rule 101 (leftvar)
    $default	reduce using rule 92 (expr)



state 51

    expr  ->  var .   (rule 93)
    leftvar  ->  var .   (rule 102)

    tASSIGN	reduce using rule 102 (leftvar)
    tPLUSEQ	reduce using rule 102 (leftvar)
    tMINUSEQ	reduce using rule 102 (leftvar)
    tMULTIPLYEQ	reduce using rule 102 (leftvar)
    tDIVIDEEQ	reduce using rule 102 (leftvar)
    tMODEQ	reduce using rule 102 (leftvar)
    tRSHIFTEQ	reduce using rule 102 (leftvar)
    tLSHIFTEQ	reduce using rule 102 (leftvar)
    tRSHIFTFILLEQ	reduce using rule 102 (leftvar)
    tANDEQ	reduce using rule 102 (leftvar)
    tXOREQ	reduce using rule 102 (leftvar)
    tOREQ	reduce using rule 102 (leftvar)
    $default	reduce using rule 93 (expr)



state 52

    funccall  ->  tIDENTIFIER '(' . params ')'   (rule 97)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    $default	reduce using rule 96 (params)

    expr	go to state 113
    params	go to state 114
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 53

    if  ->  tIF '(' . comma_expr ')' stmntblk   (rule 27)
    if  ->  tIF '(' . comma_expr ')' stmntblk tELSE stmntblk   (rule 28)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    comma_expr	go to state 115
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 54

    for  ->  tFOR '(' . opt_expr ';' opt_expr ';' opt_expr ')' stmntblk   (rule 29)
    for  ->  tFOR '(' . var tIN expr ')' stmntblk   (rule 30)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    $default	reduce using rule 42 (opt_expr)

    opt_expr	go to state 116
    comma_expr	go to state 117
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 118



state 55

    while  ->  tWHILE '(' . comma_expr ')' stmntblk   (rule 34)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    comma_expr	go to state 119
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 56

    with  ->  tWITH '(' . expr ')' stmntblk   (rule 33)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 120
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 57

    return  ->  tRETURN comma_expr .   (rule 25)

    $default	reduce using rule 25 (return)



state 58

    newcall  ->  tNEW tIDENTIFIER . '(' params ')'   (rule 99)

    '(' 	shift, and go to state 121



state 59

    varentry  ->  tIDENTIFIER .   (rule 35)
    varentry  ->  tIDENTIFIER . tASSIGN expr   (rule 36)

    tASSIGN	shift, and go to state 122

    $default	reduce using rule 35 (varentry)



state 60

    varentrys  ->  varentry .   (rule 38)

    $default	reduce using rule 38 (varentrys)



state 61

    varentrys  ->  varentrys . tCOMMA varentry   (rule 37)
    varstmt  ->  tVAR varentrys .   (rule 40)

    tCOMMA	shift, and go to state 123

    $default	reduce using rule 40 (varstmt)



state 62

    expr  ->  tMINUS expr .   (rule 46)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 46 (expr)



state 63

    expr  ->  tNOT expr .   (rule 47)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 47 (expr)



state 64

    expr  ->  tONESCOMP expr .   (rule 48)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 48 (expr)



state 65

    expr  ->  tINCREMENT expr .   (rule 61)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 61 (expr)



state 66

    expr  ->  tDECREMENT expr .   (rule 62)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 62 (expr)



state 67

    expr  ->  '(' comma_expr . ')'   (rule 45)

    ')' 	shift, and go to state 124



state 68

    stmntblk  ->  '{' '}' .   (rule 11)

    $default	reduce using rule 11 (stmntblk)



state 69

    stmntblk  ->  '{' stmnts . '}'   (rule 10)
    stmnts  ->  stmnts . stmnt   (rule 13)
    stmnts  ->  stmnts . error   (rule 15)

    error	shift, and go to state 125
    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tIF 	shift, and go to state 16
    tFOR	shift, and go to state 17
    tWHILE	shift, and go to state 18
    tWITH	shift, and go to state 19
    tBREAK	shift, and go to state 20
    tCONTINUE	shift, and go to state 21
    tRETURN	shift, and go to state 22
    tNEW	shift, and go to state 23
    tVAR	shift, and go to state 24
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31
    '}' 	shift, and go to state 126

    stmnt	go to state 127
    return	go to state 35
    if  	go to state 36
    for 	go to state 37
    break	go to state 38
    continue	go to state 39
    with	go to state 40
    while	go to state 41
    varstmt	go to state 42
    comma_expr	go to state 43
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 70

    stmnts  ->  stmnt .   (rule 14)

    $default	reduce using rule 14 (stmnts)



state 71

    stmnt  ->  return ';' .   (rule 20)

    $default	reduce using rule 20 (stmnt)



state 72

    stmnt  ->  break ';' .   (rule 22)

    $default	reduce using rule 22 (stmnt)



state 73

    stmnt  ->  continue ';' .   (rule 23)

    $default	reduce using rule 23 (stmnt)



state 74

    stmnt  ->  varstmt ';' .   (rule 24)

    $default	reduce using rule 24 (stmnt)



state 75

    stmnt  ->  comma_expr ';' .   (rule 19)

    $default	reduce using rule 19 (stmnt)



state 76

    comma_expr  ->  expr tCOMMA . comma_expr   (rule 44)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    comma_expr	go to state 128
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 77

    expr  ->  expr tCONDTEST . expr tCONDSEP expr   (rule 65)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 129
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 78

    expr  ->  expr tLOR . expr   (rule 73)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 130
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 79

    expr  ->  expr tLAND . expr   (rule 72)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 131
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 80

    expr  ->  expr tOR . expr   (rule 80)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 132
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 81

    expr  ->  expr tXOR . expr   (rule 81)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 133
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 82

    expr  ->  expr tAND . expr   (rule 79)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 134
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 83

    expr  ->  expr tEQ . expr   (rule 66)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 135
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 84

    expr  ->  expr tNE . expr   (rule 67)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 136
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 85

    expr  ->  expr tLT . expr   (rule 68)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 137
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 86

    expr  ->  expr tLE . expr   (rule 69)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 138
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 87

    expr  ->  expr tGE . expr   (rule 70)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 139
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 88

    expr  ->  expr tGT . expr   (rule 71)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 140
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 89

    expr  ->  expr tRSHIFT . expr   (rule 83)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 141
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 90

    expr  ->  expr tLSHIFT . expr   (rule 82)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 142
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 91

    expr  ->  expr tRSHIFTFILL . expr   (rule 84)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 143
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 92

    expr  ->  expr tPLUS . expr   (rule 74)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 144
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 93

    expr  ->  expr tMINUS . expr   (rule 75)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 145
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 94

    expr  ->  expr tMULTIPLY . expr   (rule 76)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 146
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 95

    expr  ->  expr tDIVIDE . expr   (rule 77)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 147
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 96

    expr  ->  expr tMOD . expr   (rule 78)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 148
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 97

    expr  ->  expr tINCREMENT .   (rule 63)

    $default	reduce using rule 63 (expr)



state 98

    expr  ->  expr tDECREMENT .   (rule 64)

    $default	reduce using rule 64 (expr)



state 99

    objmethodcall  ->  expr tDOT . tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr tDOT . tIDENTIFIER   (rule 103)

    tIDENTIFIER	shift, and go to state 149



state 100

    arrayderef  ->  expr tRIGHTBRACKET . comma_expr tLEFTBRACKET   (rule 104)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    comma_expr	go to state 150
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 101

    expr  ->  leftvar tASSIGN . expr   (rule 49)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 151
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 102

    expr  ->  leftvar tPLUSEQ . expr   (rule 50)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 152
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 103

    expr  ->  leftvar tMINUSEQ . expr   (rule 51)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 153
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 104

    expr  ->  leftvar tMULTIPLYEQ . expr   (rule 52)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 154
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 105

    expr  ->  leftvar tDIVIDEEQ . expr   (rule 53)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 155
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 106

    expr  ->  leftvar tMODEQ . expr   (rule 54)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 156
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 107

    expr  ->  leftvar tRSHIFTEQ . expr   (rule 59)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 157
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 108

    expr  ->  leftvar tLSHIFTEQ . expr   (rule 58)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 158
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 109

    expr  ->  leftvar tRSHIFTFILLEQ . expr   (rule 60)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 159
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 110

    expr  ->  leftvar tANDEQ . expr   (rule 55)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 160
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 111

    expr  ->  leftvar tXOREQ . expr   (rule 57)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 161
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 112

    expr  ->  leftvar tOREQ . expr   (rule 56)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 162
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 113

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    params  ->  expr .   (rule 95)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 95 (params)



state 114

    params  ->  params . tCOMMA expr   (rule 94)
    funccall  ->  tIDENTIFIER '(' params . ')'   (rule 97)

    tCOMMA	shift, and go to state 163
    ')' 	shift, and go to state 164



state 115

    if  ->  tIF '(' comma_expr . ')' stmntblk   (rule 27)
    if  ->  tIF '(' comma_expr . ')' stmntblk tELSE stmntblk   (rule 28)

    ')' 	shift, and go to state 165



state 116

    for  ->  tFOR '(' opt_expr . ';' opt_expr ';' opt_expr ')' stmntblk   (rule 29)

    ';' 	shift, and go to state 166



state 117

    opt_expr  ->  comma_expr .   (rule 41)

    $default	reduce using rule 41 (opt_expr)



state 118

    for  ->  tFOR '(' var . tIN expr ')' stmntblk   (rule 30)
    expr  ->  var .   (rule 93)
    leftvar  ->  var .   (rule 102)

    tIN 	shift, and go to state 167

    tASSIGN	reduce using rule 102 (leftvar)
    tPLUSEQ	reduce using rule 102 (leftvar)
    tMINUSEQ	reduce using rule 102 (leftvar)
    tMULTIPLYEQ	reduce using rule 102 (leftvar)
    tDIVIDEEQ	reduce using rule 102 (leftvar)
    tMODEQ	reduce using rule 102 (leftvar)
    tRSHIFTEQ	reduce using rule 102 (leftvar)
    tLSHIFTEQ	reduce using rule 102 (leftvar)
    tRSHIFTFILLEQ	reduce using rule 102 (leftvar)
    tANDEQ	reduce using rule 102 (leftvar)
    tXOREQ	reduce using rule 102 (leftvar)
    tOREQ	reduce using rule 102 (leftvar)
    $default	reduce using rule 93 (expr)



state 119

    while  ->  tWHILE '(' comma_expr . ')' stmntblk   (rule 34)

    ')' 	shift, and go to state 168



state 120

    with  ->  tWITH '(' expr . ')' stmntblk   (rule 33)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100
    ')' 	shift, and go to state 169



state 121

    newcall  ->  tNEW tIDENTIFIER '(' . params ')'   (rule 99)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    $default	reduce using rule 96 (params)

    expr	go to state 113
    params	go to state 170
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 122

    varentry  ->  tIDENTIFIER tASSIGN . expr   (rule 36)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 171
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 123

    varentrys  ->  varentrys tCOMMA . varentry   (rule 37)

    tIDENTIFIER	shift, and go to state 59

    varentry	go to state 172



state 124

    expr  ->  '(' comma_expr ')' .   (rule 45)

    $default	reduce using rule 45 (expr)



state 125

    stmnts  ->  stmnts error .   (rule 15)

    $default	reduce using rule 15 (stmnts)



state 126

    stmntblk  ->  '{' stmnts '}' .   (rule 10)

    $default	reduce using rule 10 (stmntblk)



state 127

    stmnts  ->  stmnts stmnt .   (rule 13)

    $default	reduce using rule 13 (stmnts)



state 128

    comma_expr  ->  expr tCOMMA comma_expr .   (rule 44)

    $default	reduce using rule 44 (comma_expr)



state 129

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr tCONDTEST expr . tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tCONDSEP	shift, and go to state 173
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100



state 130

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr tLOR expr .   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 73 (expr)



state 131

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr tLAND expr .   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 72 (expr)



state 132

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr tOR expr .   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 80 (expr)



state 133

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr tXOR expr .   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 81 (expr)



state 134

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr tAND expr .   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 79 (expr)



state 135

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr tEQ expr .   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 66 (expr)



state 136

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr tNE expr .   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 67 (expr)



state 137

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr tLT expr .   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 68 (expr)



state 138

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr tLE expr .   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 69 (expr)



state 139

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr tGE expr .   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 70 (expr)



state 140

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr tGT expr .   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 71 (expr)



state 141

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr tRSHIFT expr .   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 83 (expr)



state 142

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr tLSHIFT expr .   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 82 (expr)



state 143

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    expr  ->  expr tRSHIFTFILL expr .   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 84 (expr)



state 144

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr tPLUS expr .   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 74 (expr)



state 145

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr tMINUS expr .   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 75 (expr)



state 146

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr tMULTIPLY expr .   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 76 (expr)



state 147

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr tDIVIDE expr .   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 77 (expr)



state 148

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr tMOD expr .   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 78 (expr)



state 149

    objmethodcall  ->  expr tDOT tIDENTIFIER . '(' params ')'   (rule 98)
    objmemberaccess  ->  expr tDOT tIDENTIFIER .   (rule 103)

    '(' 	shift, and go to state 174

    $default	reduce using rule 103 (objmemberaccess)



state 150

    arrayderef  ->  expr tRIGHTBRACKET comma_expr . tLEFTBRACKET   (rule 104)

    tLEFTBRACKET	shift, and go to state 175



state 151

    expr  ->  leftvar tASSIGN expr .   (rule 49)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 49 (expr)



state 152

    expr  ->  leftvar tPLUSEQ expr .   (rule 50)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 50 (expr)



state 153

    expr  ->  leftvar tMINUSEQ expr .   (rule 51)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 51 (expr)



state 154

    expr  ->  leftvar tMULTIPLYEQ expr .   (rule 52)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 52 (expr)



state 155

    expr  ->  leftvar tDIVIDEEQ expr .   (rule 53)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 53 (expr)



state 156

    expr  ->  leftvar tMODEQ expr .   (rule 54)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 54 (expr)



state 157

    expr  ->  leftvar tRSHIFTEQ expr .   (rule 59)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 59 (expr)



state 158

    expr  ->  leftvar tLSHIFTEQ expr .   (rule 58)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 58 (expr)



state 159

    expr  ->  leftvar tRSHIFTFILLEQ expr .   (rule 60)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 60 (expr)



state 160

    expr  ->  leftvar tANDEQ expr .   (rule 55)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 55 (expr)



state 161

    expr  ->  leftvar tXOREQ expr .   (rule 57)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 57 (expr)



state 162

    expr  ->  leftvar tOREQ expr .   (rule 56)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 56 (expr)



state 163

    params  ->  params tCOMMA . expr   (rule 94)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 176
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 164

    funccall  ->  tIDENTIFIER '(' params ')' .   (rule 97)

    $default	reduce using rule 97 (funccall)



state 165

    if  ->  tIF '(' comma_expr ')' . stmntblk   (rule 27)
    if  ->  tIF '(' comma_expr ')' . stmntblk tELSE stmntblk   (rule 28)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tIF 	shift, and go to state 16
    tFOR	shift, and go to state 17
    tWHILE	shift, and go to state 18
    tWITH	shift, and go to state 19
    tBREAK	shift, and go to state 20
    tCONTINUE	shift, and go to state 21
    tRETURN	shift, and go to state 22
    tNEW	shift, and go to state 23
    tVAR	shift, and go to state 24
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31
    '{' 	shift, and go to state 32

    stmntblk	go to state 177
    stmnt	go to state 34
    return	go to state 35
    if  	go to state 36
    for 	go to state 37
    break	go to state 38
    continue	go to state 39
    with	go to state 40
    while	go to state 41
    varstmt	go to state 42
    comma_expr	go to state 43
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 166

    for  ->  tFOR '(' opt_expr ';' . opt_expr ';' opt_expr ')' stmntblk   (rule 29)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    $default	reduce using rule 42 (opt_expr)

    opt_expr	go to state 178
    comma_expr	go to state 117
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 167

    for  ->  tFOR '(' var tIN . expr ')' stmntblk   (rule 30)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 179
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 168

    while  ->  tWHILE '(' comma_expr ')' . stmntblk   (rule 34)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tIF 	shift, and go to state 16
    tFOR	shift, and go to state 17
    tWHILE	shift, and go to state 18
    tWITH	shift, and go to state 19
    tBREAK	shift, and go to state 20
    tCONTINUE	shift, and go to state 21
    tRETURN	shift, and go to state 22
    tNEW	shift, and go to state 23
    tVAR	shift, and go to state 24
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31
    '{' 	shift, and go to state 32

    stmntblk	go to state 180
    stmnt	go to state 34
    return	go to state 35
    if  	go to state 36
    for 	go to state 37
    break	go to state 38
    continue	go to state 39
    with	go to state 40
    while	go to state 41
    varstmt	go to state 42
    comma_expr	go to state 43
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 169

    with  ->  tWITH '(' expr ')' . stmntblk   (rule 33)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tIF 	shift, and go to state 16
    tFOR	shift, and go to state 17
    tWHILE	shift, and go to state 18
    tWITH	shift, and go to state 19
    tBREAK	shift, and go to state 20
    tCONTINUE	shift, and go to state 21
    tRETURN	shift, and go to state 22
    tNEW	shift, and go to state 23
    tVAR	shift, and go to state 24
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31
    '{' 	shift, and go to state 32

    stmntblk	go to state 181
    stmnt	go to state 34
    return	go to state 35
    if  	go to state 36
    for 	go to state 37
    break	go to state 38
    continue	go to state 39
    with	go to state 40
    while	go to state 41
    varstmt	go to state 42
    comma_expr	go to state 43
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 170

    params  ->  params . tCOMMA expr   (rule 94)
    newcall  ->  tNEW tIDENTIFIER '(' params . ')'   (rule 99)

    tCOMMA	shift, and go to state 163
    ')' 	shift, and go to state 182



state 171

    varentry  ->  tIDENTIFIER tASSIGN expr .   (rule 36)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 36 (varentry)



state 172

    varentrys  ->  varentrys tCOMMA varentry .   (rule 37)

    $default	reduce using rule 37 (varentrys)



state 173

    expr  ->  expr tCONDTEST expr tCONDSEP . expr   (rule 65)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    expr	go to state 183
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 174

    objmethodcall  ->  expr tDOT tIDENTIFIER '(' . params ')'   (rule 98)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    $default	reduce using rule 96 (params)

    expr	go to state 113
    params	go to state 184
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 175

    arrayderef  ->  expr tRIGHTBRACKET comma_expr tLEFTBRACKET .   (rule 104)

    $default	reduce using rule 104 (arrayderef)



state 176

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    params  ->  params tCOMMA expr .   (rule 94)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 94 (params)



state 177

    if  ->  tIF '(' comma_expr ')' stmntblk .   (rule 27)
    if  ->  tIF '(' comma_expr ')' stmntblk . tELSE stmntblk   (rule 28)

    tELSE	shift, and go to state 185

    tELSE	[reduce using rule 27 (if)]
    $default	reduce using rule 27 (if)



state 178

    for  ->  tFOR '(' opt_expr ';' opt_expr . ';' opt_expr ')' stmntblk   (rule 29)

    ';' 	shift, and go to state 186



state 179

    for  ->  tFOR '(' var tIN expr . ')' stmntblk   (rule 30)
    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tCONDTEST	shift, and go to state 77
    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100
    ')' 	shift, and go to state 187



state 180

    while  ->  tWHILE '(' comma_expr ')' stmntblk .   (rule 34)

    $default	reduce using rule 34 (while)



state 181

    with  ->  tWITH '(' expr ')' stmntblk .   (rule 33)

    $default	reduce using rule 33 (with)



state 182

    newcall  ->  tNEW tIDENTIFIER '(' params ')' .   (rule 99)

    $default	reduce using rule 99 (newcall)



state 183

    expr  ->  expr . tINCREMENT   (rule 63)
    expr  ->  expr . tDECREMENT   (rule 64)
    expr  ->  expr . tCONDTEST expr tCONDSEP expr   (rule 65)
    expr  ->  expr tCONDTEST expr tCONDSEP expr .   (rule 65)
    expr  ->  expr . tEQ expr   (rule 66)
    expr  ->  expr . tNE expr   (rule 67)
    expr  ->  expr . tLT expr   (rule 68)
    expr  ->  expr . tLE expr   (rule 69)
    expr  ->  expr . tGE expr   (rule 70)
    expr  ->  expr . tGT expr   (rule 71)
    expr  ->  expr . tLAND expr   (rule 72)
    expr  ->  expr . tLOR expr   (rule 73)
    expr  ->  expr . tPLUS expr   (rule 74)
    expr  ->  expr . tMINUS expr   (rule 75)
    expr  ->  expr . tMULTIPLY expr   (rule 76)
    expr  ->  expr . tDIVIDE expr   (rule 77)
    expr  ->  expr . tMOD expr   (rule 78)
    expr  ->  expr . tAND expr   (rule 79)
    expr  ->  expr . tOR expr   (rule 80)
    expr  ->  expr . tXOR expr   (rule 81)
    expr  ->  expr . tLSHIFT expr   (rule 82)
    expr  ->  expr . tRSHIFT expr   (rule 83)
    expr  ->  expr . tRSHIFTFILL expr   (rule 84)
    objmethodcall  ->  expr . tDOT tIDENTIFIER '(' params ')'   (rule 98)
    objmemberaccess  ->  expr . tDOT tIDENTIFIER   (rule 103)
    arrayderef  ->  expr . tRIGHTBRACKET comma_expr tLEFTBRACKET   (rule 104)

    tLOR	shift, and go to state 78
    tLAND	shift, and go to state 79
    tOR 	shift, and go to state 80
    tXOR	shift, and go to state 81
    tAND	shift, and go to state 82
    tEQ 	shift, and go to state 83
    tNE 	shift, and go to state 84
    tLT 	shift, and go to state 85
    tLE 	shift, and go to state 86
    tGE 	shift, and go to state 87
    tGT 	shift, and go to state 88
    tRSHIFT	shift, and go to state 89
    tLSHIFT	shift, and go to state 90
    tRSHIFTFILL	shift, and go to state 91
    tPLUS	shift, and go to state 92
    tMINUS	shift, and go to state 93
    tMULTIPLY	shift, and go to state 94
    tDIVIDE	shift, and go to state 95
    tMOD	shift, and go to state 96
    tINCREMENT	shift, and go to state 97
    tDECREMENT	shift, and go to state 98
    tDOT	shift, and go to state 99
    tRIGHTBRACKET	shift, and go to state 100

    $default	reduce using rule 65 (expr)



state 184

    params  ->  params . tCOMMA expr   (rule 94)
    objmethodcall  ->  expr tDOT tIDENTIFIER '(' params . ')'   (rule 98)

    tCOMMA	shift, and go to state 163
    ')' 	shift, and go to state 188



state 185

    if  ->  tIF '(' comma_expr ')' stmntblk tELSE . stmntblk   (rule 28)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tIF 	shift, and go to state 16
    tFOR	shift, and go to state 17
    tWHILE	shift, and go to state 18
    tWITH	shift, and go to state 19
    tBREAK	shift, and go to state 20
    tCONTINUE	shift, and go to state 21
    tRETURN	shift, and go to state 22
    tNEW	shift, and go to state 23
    tVAR	shift, and go to state 24
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31
    '{' 	shift, and go to state 32

    stmntblk	go to state 189
    stmnt	go to state 34
    return	go to state 35
    if  	go to state 36
    for 	go to state 37
    break	go to state 38
    continue	go to state 39
    with	go to state 40
    while	go to state 41
    varstmt	go to state 42
    comma_expr	go to state 43
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 186

    for  ->  tFOR '(' opt_expr ';' opt_expr ';' . opt_expr ')' stmntblk   (rule 29)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tNEW	shift, and go to state 23
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31

    $default	reduce using rule 42 (opt_expr)

    opt_expr	go to state 190
    comma_expr	go to state 117
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 187

    for  ->  tFOR '(' var tIN expr ')' . stmntblk   (rule 30)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tIF 	shift, and go to state 16
    tFOR	shift, and go to state 17
    tWHILE	shift, and go to state 18
    tWITH	shift, and go to state 19
    tBREAK	shift, and go to state 20
    tCONTINUE	shift, and go to state 21
    tRETURN	shift, and go to state 22
    tNEW	shift, and go to state 23
    tVAR	shift, and go to state 24
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31
    '{' 	shift, and go to state 32

    stmntblk	go to state 191
    stmnt	go to state 34
    return	go to state 35
    if  	go to state 36
    for 	go to state 37
    break	go to state 38
    continue	go to state 39
    with	go to state 40
    while	go to state 41
    varstmt	go to state 42
    comma_expr	go to state 43
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 188

    objmethodcall  ->  expr tDOT tIDENTIFIER '(' params ')' .   (rule 98)

    $default	reduce using rule 98 (objmethodcall)



state 189

    if  ->  tIF '(' comma_expr ')' stmntblk tELSE stmntblk .   (rule 28)

    $default	reduce using rule 28 (if)



state 190

    for  ->  tFOR '(' opt_expr ';' opt_expr ';' opt_expr . ')' stmntblk   (rule 29)

    ')' 	shift, and go to state 192



state 191

    for  ->  tFOR '(' var tIN expr ')' stmntblk .   (rule 30)

    $default	reduce using rule 30 (for)



state 192

    for  ->  tFOR '(' opt_expr ';' opt_expr ';' opt_expr ')' . stmntblk   (rule 29)

    tNUMBER	shift, and go to state 13
    tSTRING	shift, and go to state 14
    tIDENTIFIER	shift, and go to state 15
    tIF 	shift, and go to state 16
    tFOR	shift, and go to state 17
    tWHILE	shift, and go to state 18
    tWITH	shift, and go to state 19
    tBREAK	shift, and go to state 20
    tCONTINUE	shift, and go to state 21
    tRETURN	shift, and go to state 22
    tNEW	shift, and go to state 23
    tVAR	shift, and go to state 24
    tNULL	shift, and go to state 25
    tMINUS	shift, and go to state 26
    tNOT	shift, and go to state 27
    tONESCOMP	shift, and go to state 28
    tINCREMENT	shift, and go to state 29
    tDECREMENT	shift, and go to state 30
    '(' 	shift, and go to state 31
    '{' 	shift, and go to state 32

    stmntblk	go to state 193
    stmnt	go to state 34
    return	go to state 35
    if  	go to state 36
    for 	go to state 37
    break	go to state 38
    continue	go to state 39
    with	go to state 40
    while	go to state 41
    varstmt	go to state 42
    comma_expr	go to state 43
    expr	go to state 44
    funccall	go to state 45
    objmethodcall	go to state 46
    newcall	go to state 47
    leftvar	go to state 48
    objmemberaccess	go to state 49
    arrayderef	go to state 50
    var 	go to state 51



state 193

    for  ->  tFOR '(' opt_expr ';' opt_expr ';' opt_expr ')' stmntblk .   (rule 29)

    $default	reduce using rule 29 (for)



state 194

    $   	go to state 195



state 195

    $   	go to state 196



state 196

    $default	accept
